import pygame,sys
import model
import road

traffic_lights_timer = 57
main_roads = [road.main_road1, road.main_road2, road.main_road3, road.main_road4, road.main_road5, road.main_road6]

class drawing(object):
    def __init__(self):
        # initialization
        clock = pygame.time.Clock()
        FPS = 15
        self.width = 674
        self.height = 783
        self.cords=[]
        self.mapList=[]
        self.lista=[1]
        self.screen = pygame.display.set_mode((self.width, self.height))
        self.pic = 6
        self.pic_name = "road/x6.jpg"
        
        def numbers_to_pic_name(argument): 
            switcher = { 
                1: "road/1.jpg", 
                2: "road/2.jpg", 
                3: "road/3.jpg", 
                4: "road/4.jpg", 
                5: "road/5.jpg", 
                6: "road/6.jpg", 
                7: "road/7.jpg", 
                8: "road/8.jpg", 
                9: "road/9.jpg", 
                10: "road/10.jpg", 
                11: "road/11.jpg", 
                12: "road/12.jpg", 
                13: "road/13.jpg", 
                14: "road/14.jpg", 
            } 
            return switcher.get(argument, "road/2.jpg") #domyslny
        
        while True:
            # Handle events
            for event in pygame.event.get():
                if (event.type == pygame.QUIT):
                    sys.exit(0)
                if event.type == pygame.KEYDOWN:
                    if (event.key == pygame.K_ESCAPE):
                        sys.exit(0)
                    elif (event.key == pygame.K_RIGHT): #zmiana obrazka zgodnie z ruchem wskazowek
                        self.pic +=1
                        if(self.pic == 15):
                            self.pic = 1
                        self.pic_name=numbers_to_pic_name(self.pic)
                    elif (event.key == pygame.K_LEFT): #zmiana obrazka przeciwnie do ruchu wskazowek
                        self.pic -=1
                        if(self.pic == 0):
                            self.pic = 14
                        self.pic_name=numbers_to_pic_name(self.pic)
                    elif (event.key == pygame.K_F11):
                        self.screen = pygame.display.set_mode((self.width, self.height))
                    elif (event.key == pygame.K_F10):
                        print(self.cords)
                    elif (event.key == pygame.K_SPACE):
                        self.cords.pop()
                    elif (event.key == pygame.K_F9):
                        self.makeList(self.lista)
                if (event.type == pygame.MOUSEBUTTONDOWN):
                    # print event.button
                    w=pygame.mouse.get_pos()
                    print(w)
                    self.cords.append(w)
                    pygame.display.update()

            model.simulation() #symulacja kolejnego kroku
            
            bypassImage=pygame.image.load(self.pic_name)
            self.screen.blit(bypassImage,(0,0))
            
            if(self.pic==1):
                self.draw_main_road1_pic1()
                self.draw_main_road2_pic1()
                self.draw_main_road3_pic1()
                self.draw_main_road4_pic1()
                self.draw_main_road5_pic1()
                self.draw_main_road6_pic1()
            elif(self.pic==2):
                self.draw_main_road1_pic2()
                self.draw_main_road2_pic2()
                self.draw_main_road3_pic2()
                self.draw_main_road4_pic2()
                self.draw_main_road5_pic2()
                self.draw_main_road6_pic2()
                self.draw_r1_pic2()
                self.draw_r2_pic2()
                self.draw_r3_pic2()
                self.draw_r4_pic2()
                self.draw_r5_pic2()
                self.draw_r6_pic2()
                self.draw_r7_pic2()
                self.draw_r8_pic2()
                self.draw_r9_pic2()
                self.draw_r10_pic2()
                self.draw_r11_pic2()
                self.draw_r12_pic2()
                self.draw_r13_pic2()
                self.draw_r14_pic2()
                self.draw_r15_pic2()
            elif(self.pic==3):
                self.draw_main_road1_pic3()
                self.draw_main_road2_pic3()
                self.draw_main_road3_pic3()
                self.draw_main_road4_pic3()
                self.draw_main_road5_pic3()
                self.draw_main_road6_pic3()
            elif(self.pic==4):
                self.draw_main_road1_pic4()
                self.draw_main_road2_pic4()
                self.draw_main_road5_pic4()
                self.draw_main_road6_pic4()
            elif(self.pic==5):
                self.draw_main_road1_pic5()
                self.draw_main_road2_pic5()
                self.draw_main_road3_pic5()
                self.draw_main_road4_pic5()
                self.draw_main_road5_pic5()
                self.draw_main_road6_pic5()
             elif(self.pic==8):
                self.draw_main_road1_pic8()
                self.draw_main_road2_pic8()
                self.draw_main_road5_pic8()
                self.draw_main_road6_pic8()
             elif(self.pic==9):
                self.draw_main_road1_pic9()
                self.draw_main_road2_pic9()
                self.draw_main_road3_pic9()
                self.draw_main_road4_pic9()
                self.draw_main_road5_pic9()
                self.draw_main_road6_pic9()
                
            for i in range(len(self.cords)): # do usunienia po wizulaizacji
                (x,y)=self.cords[i]
                pygame.draw.rect(self.screen, (0,0,0), pygame.Rect(x, y, 2, 2))

                   
            pygame.display.update()
            clock.tick(FPS)
   
    
    def makeList(self,listofnumbers): # do usunienia po wizulaizacji
        self.mapList.clear()
        self.mapList.append(self.cords[0])
        dx=0
        dy=0
        for i in range(0,len(self.cords)):
            if(i>0):
                (x1,y1)=self.cords[i]
                (x2,y2)=self.cords[i-1]
                x=x1-x2
                y=y1-y2
                dx=x/listofnumbers[i-1]
                dy=y/listofnumbers[i-1]
                print(listofnumbers[i-1])
                for k in range(listofnumbers[i-1]):
                    x2 = x2 + dx
                    y2 = y2 + dy
                    w = (x2, y2)
                    self.mapList.append(w)
                    
            if(i>0):
                for i in range(len(self.mapList)):
                    (x,y)=self.mapList[i]
                    pygame.draw.rect(self.screen, (133, 230, 90), pygame.Rect(x, y, 2, 2))         
                    
        print(self.mapList)
        print(len(self.mapList))
            
        pygame.display.update()

    def draw_main_road1_pic1(self):
        main_road1=[(473, 69), (478.25, 64.75), (483.5, 60.5), (488.75, 56.25), (494.0, 52.0), (499.25, 47.75),
                   (504.5, 43.5), (509.75, 39.25), (515.0, 35.0), (520.25, 30.75), (525.5, 26.5), (530.75, 22.25),
                   (536.0, 18.0), (541.25, 13.75), (546.5, 9.5), (551.75, 5.25), (557.0, 1.0)]
        for d in range(17): #len(road.main_road4.lane)
            if (road.main_road1.lane[d].vehicle == 1):
                (x, y) = main_road1[d]
                pygame.draw.rect(self.screen, (255, 255, 255), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
    
    def draw_main_road2_pic1(self):
        main_road2 = [(478, 72), (483.3125, 67.6875), (488.625, 63.375), (493.9375, 59.0625), (499.25, 54.75),
                   (504.5625, 50.4375), (509.875, 46.125), (515.1875, 41.8125), (520.5, 37.5), (525.8125, 33.1875),
                   (531.125, 28.875), (536.4375, 24.5625), (541.75, 20.25), (547.0625, 15.9375), (552.375, 11.625),
                   (557.6875, 7.3125), (563.0, 3.0)]
        for d in range(17): #len(road.main_road4.lane)
            if (road.main_road2.lane[d].vehicle == 1):
                (x, y) = main_road2[d]
                pygame.draw.rect(self.screen, (255, 255, 255), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
    
    def draw_main_road3_pic1(self):
        main_road3=[(483, 78), (488.4375, 73.375), (493.875, 68.75), (499.3125, 64.125), (504.75, 59.5),
                   (510.1875, 54.875), (515.625, 50.25), (521.0625, 45.625), (526.5, 41.0), (531.9375, 36.375),
                   (537.375, 31.75), (542.8125, 27.125), (548.25, 22.5), (553.6875, 17.875), (559.125, 13.25),
                   (564.5625, 8.625), (570.0, 4.0)]
        for d in range(17): #len(road.main_road4.lane)
            if (road.main_road3.lane[d].vehicle == 1):
                (x, y) = main_road3[d]
                pygame.draw.rect(self.screen, (255, 255, 255), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
    
    def draw_main_road4_pic1(self):
        main_road4=[(450, 50), (443.3333333333333, 55.0), (436.66666666666663, 60.0), (429.99999999999994, 65.0),
         (423.33333333333326, 70.0), (416.6666666666666, 75.0), (409.9999999999999, 80.0), (400.0, 88.0),
         (396.0, 93.0), (391.375, 97.375), (386.75, 101.75), (382.125, 106.125), (377.5, 110.5),
         (372.875, 114.875), (368.25, 119.25), (363.625, 123.625), (359.0, 128.0), (354.375, 132.375),
         (349.75, 136.75), (345.125, 141.125), (340.5, 145.5), (335.875, 149.875), (331.25, 154.25),
         (326.625, 158.625), (322.0, 163.0), (319.0, 167.0), (315.0, 173.0),
         (311.94117647058823, 179.47058823529412), (308.88235294117646, 185.94117647058823),
         (305.8235294117647, 192.41176470588235), (302.7647058823529, 198.88235294117646),
         (299.70588235294116, 205.35294117647058), (296.6470588235294, 211.8235294117647),
         (293.5882352941176, 218.2941176470588), (290.52941176470586, 224.76470588235293),
         (287.4705882352941, 231.23529411764704), (284.4117647058823, 237.70588235294116),
         (281.35294117647055, 244.17647058823528), (278.2941176470588, 250.6470588235294),
         (275.235294117647, 257.11764705882354), (272.17647058823525, 263.5882352941177),
         (269.1176470588235, 270.0588235294118), (266.0588235294117, 276.52941176470597),
         (262.99999999999994, 283.0000000000001), (260.0, 290.0), (255.0, 302.0), (252.5625, 307.4375),
         (250.125, 312.875), (247.6875, 318.3125), (245.25, 323.75), (242.8125, 329.1875), (240.375, 334.625),
         (237.9375, 340.0625), (235.5, 345.5), (233.0625, 350.9375), (230.625, 356.375), (228.1875, 361.8125),
         (225.75, 367.25), (223.3125, 372.6875), (220.875, 378.125), (218.4375, 383.5625), (216.0, 389.0),
         (213.9375, 393.6875), (211.875, 398.375), (209.8125, 403.0625), (207.75, 407.75),
         (205.6875, 412.4375), (203.625, 417.125), (201.5625, 421.8125), (199.5, 426.5), (197.4375, 431.1875),
         (195.375, 435.875), (193.3125, 440.5625), (191.25, 445.25), (189.1875, 449.9375), (187.125, 454.625),
         (185.0625, 459.3125), (183.0, 464.0), (180.23529411764707, 472.47058823529414),
         (177.47058823529414, 480.9411764705883), (174.70588235294122, 489.41176470588243),
         (171.9411764705883, 497.8823529411766), (169.17647058823536, 506.3529411764707),
         (166.41176470588243, 514.8235294117649), (163.6470588235295, 523.294117647059),
         (160.88235294117658, 531.7647058823532), (158.11764705882365, 540.2352941176473),
         (155.35294117647072, 548.7058823529414), (152.5882352941178, 557.1764705882356),
         (149.82352941176487, 565.6470588235297), (147.05882352941194, 574.1176470588239),
         (144.294117647059, 582.588235294118), (141.52941176470608, 591.0588235294122),
         (138.76470588235316, 599.5294117647063), (136.00000000000023, 608.0000000000005), (134.0, 614.0),
         (130.0, 621.0), (126.0, 632.0), (126.0, 641.0), (126.0, 646.0), (124.14285714285714, 655.5),
         (122.28571428571428, 665.0), (120.42857142857142, 674.5), (118.57142857142856, 684.0),
         (116.7142857142857, 693.5), (114.85714285714283, 703.0), (112.99999999999997, 712.5),
         (111.14285714285711, 722.0), (109.28571428571425, 731.5), (107.42857142857139, 741.0),
         (105.57142857142853, 750.5), (103.71428571428567, 760.0), (101.8571428571428, 769.5),
         (99.99999999999994, 779.0)]
        for d in range(114): #len(road.main_road4.lane)
            if (road.main_road4.lane[d].vehicle == 1):
                (x, y) = main_road4[d]
                pygame.draw.rect(self.screen, (255, 255, 255), pygame.Rect(x, y, 2, 2))
                pygame.display.update()

    def draw_main_road5_pic1(self):
        main_road5=[(453, 51), (446.5, 56.333333333333336), (440.0, 61.66666666666667), (433.5, 67.0),
         (427.0, 72.33333333333333), (420.5, 77.66666666666666), (414.0, 82.99999999999999), (405.0, 90.0),
         (401.0, 96.0), (396.25, 100.3125), (391.5, 104.625), (386.75, 108.9375), (382.0, 113.25),
         (377.25, 117.5625), (372.5, 121.875), (367.75, 126.1875), (363.0, 130.5), (358.25, 134.8125),
         (353.5, 139.125), (348.75, 143.4375), (344.0, 147.75), (339.25, 152.0625), (334.5, 156.375),
         (329.75, 160.6875), (325.0, 165.0), (322.0, 169.0), (319.0, 174.0),
         (315.94117647058823, 180.7058823529412), (312.88235294117646, 187.41176470588238),
         (309.8235294117647, 194.11764705882356), (306.7647058823529, 200.82352941176475),
         (303.70588235294116, 207.52941176470594), (300.6470588235294, 214.23529411764713),
         (297.5882352941176, 220.94117647058832), (294.52941176470586, 227.6470588235295),
         (291.4705882352941, 234.3529411764707), (288.4117647058823, 241.05882352941188),
         (285.35294117647055, 247.76470588235307), (282.2941176470588, 254.47058823529426),
         (279.235294117647, 261.1764705882354), (276.17647058823525, 267.8823529411766),
         (273.1176470588235, 274.58823529411774), (270.0588235294117, 281.2941176470589),
         (266.99999999999994, 288.00000000000006), (263.0, 295.0), (259.0, 305.0), (256.625, 310.3125),
         (254.25, 315.625), (251.875, 320.9375), (249.5, 326.25), (247.125, 331.5625), (244.75, 336.875),
         (242.375, 342.1875), (240.0, 347.5), (237.625, 352.8125), (235.25, 358.125), (232.875, 363.4375),
         (230.5, 368.75), (228.125, 374.0625), (225.75, 379.375), (223.375, 384.6875), (221.0, 390.0),
         (218.75, 395.0625), (216.5, 400.125), (214.25, 405.1875), (212.0, 410.25), (209.75, 415.3125),
         (207.5, 420.375), (205.25, 425.4375), (203.0, 430.5), (200.75, 435.5625), (198.5, 440.625),
         (196.25, 445.6875), (194.0, 450.75), (191.75, 455.8125), (189.5, 460.875), (187.25, 465.9375),
         (185.0, 471.0), (182.35294117647058, 479.1764705882353), (179.70588235294116, 487.3529411764706),
         (177.05882352941174, 495.5294117647059), (174.41176470588232, 503.7058823529412),
         (171.7647058823529, 511.8823529411765), (169.11764705882348, 520.0588235294118),
         (166.47058823529406, 528.2352941176471), (163.82352941176464, 536.4117647058823),
         (161.17647058823522, 544.5882352941176), (158.5294117647058, 552.7647058823528),
         (155.88235294117638, 560.9411764705881), (153.23529411764696, 569.1176470588233),
         (150.58823529411754, 577.2941176470586), (147.94117647058812, 585.4705882352938),
         (145.2941176470587, 593.647058823529), (142.64705882352928, 601.8235294117643),
         (139.99999999999986, 609.9999999999995), (137.0, 616.0), (136.0, 624.0), (132.0, 632.0),
         (131.0, 640.0), (131.0, 649.0), (129.21428571428572, 658.2857142857143),
         (127.42857142857143, 667.5714285714287), (125.64285714285714, 676.857142857143),
         (123.85714285714285, 686.1428571428573), (122.07142857142856, 695.4285714285717),
         (120.28571428571426, 704.714285714286), (118.49999999999997, 714.0000000000003),
         (116.71428571428568, 723.2857142857147), (114.92857142857139, 732.571428571429),
         (113.1428571428571, 741.8571428571433), (111.3571428571428, 751.1428571428577),
         (109.57142857142851, 760.428571428572), (107.78571428571422, 769.7142857142863),
         (105.99999999999993, 779.0000000000007)]
        for d in range(114): #len(road.main_road4.lane)
            if (road.main_road5.lane[d].vehicle == 1):
                (x, y) = main_road5[d]
                pygame.draw.rect(self.screen, (255, 255, 255), pygame.Rect(x, y, 2, 2))
                pygame.display.update()

    def draw_main_road6_pic1(self):
        main_road6=[(458, 55), (451.6666666666667, 60.0), (445.33333333333337, 65.0), (439.00000000000006, 70.0),
         (432.66666666666674, 75.0), (426.3333333333334, 80.0), (420.0000000000001, 85.0), (414.0, 92.0),
         (409.0, 96.0), (404.0625, 100.625), (399.125, 105.25), (394.1875, 109.875), (389.25, 114.5),
         (384.3125, 119.125), (379.375, 123.75), (374.4375, 128.375), (369.5, 133.0), (364.5625, 137.625),
         (359.625, 142.25), (354.6875, 146.875), (349.75, 151.5), (344.8125, 156.125), (339.875, 160.75),
         (334.9375, 165.375), (330.0, 170.0), (327.0, 175.0), (325.0, 179.0),
         (321.94117647058823, 185.64705882352942), (318.88235294117646, 192.29411764705884),
         (315.8235294117647, 198.94117647058826), (312.7647058823529, 205.58823529411768),
         (309.70588235294116, 212.2352941176471), (306.6470588235294, 218.88235294117652),
         (303.5882352941176, 225.52941176470594), (300.52941176470586, 232.17647058823536),
         (297.4705882352941, 238.82352941176478), (294.4117647058823, 245.4705882352942),
         (291.35294117647055, 252.11764705882362), (288.2941176470588, 258.76470588235304),
         (285.235294117647, 265.41176470588243), (282.17647058823525, 272.0588235294118),
         (279.1176470588235, 278.7058823529412), (276.0588235294117, 285.3529411764706),
         (272.99999999999994, 292.0), (267.0, 300.0), (263.0, 308.0), (260.9375, 312.6875),
         (258.875, 317.375), (256.8125, 322.0625), (254.75, 326.75), (252.6875, 331.4375), (250.625, 336.125),
         (248.5625, 340.8125), (246.5, 345.5), (244.4375, 350.1875), (242.375, 354.875), (240.3125, 359.5625),
         (238.25, 364.25), (236.1875, 368.9375), (234.125, 373.625), (232.0625, 378.3125), (230.0, 383.0),
         (227.6875, 388.1875), (225.375, 393.375), (223.0625, 398.5625), (220.75, 403.75),
         (218.4375, 408.9375), (216.125, 414.125), (213.8125, 419.3125), (211.5, 424.5), (209.1875, 429.6875),
         (206.875, 434.875), (204.5625, 440.0625), (202.25, 445.25), (199.9375, 450.4375), (197.625, 455.625),
         (195.3125, 460.8125), (193.0, 466.0), (190.47058823529412, 474.2352941176471),
         (187.94117647058823, 482.47058823529414), (185.41176470588235, 490.7058823529412),
         (182.88235294117646, 498.9411764705883), (180.35294117647058, 507.17647058823536),
         (177.8235294117647, 515.4117647058824), (175.2941176470588, 523.6470588235295),
         (172.76470588235293, 531.8823529411766), (170.23529411764704, 540.1176470588236),
         (167.70588235294116, 548.3529411764707), (165.17647058823528, 556.5882352941178),
         (162.6470588235294, 564.8235294117649), (160.1176470588235, 573.0588235294119),
         (157.58823529411762, 581.294117647059), (155.05882352941174, 589.5294117647061),
         (152.52941176470586, 597.7647058823532), (149.99999999999997, 606.0000000000002), (143.0, 613.0),
         (140.0, 625.0), (136.0, 640.0), (137.0, 648.0), (135.0, 659.0),
         (133.35714285714286, 667.5714285714286), (131.71428571428572, 676.1428571428571),
         (130.07142857142858, 684.7142857142857), (128.42857142857144, 693.2857142857142),
         (126.7857142857143, 701.8571428571428), (125.14285714285717, 710.4285714285713),
         (123.50000000000003, 718.9999999999999), (121.85714285714289, 727.5714285714284),
         (120.21428571428575, 736.142857142857), (118.57142857142861, 744.7142857142856),
         (116.92857142857147, 753.2857142857141), (115.28571428571433, 761.8571428571427),
         (113.6428571428572, 770.4285714285712), (112.00000000000006, 778.9999999999998)]
        for d in range(114): #len(road.main_road4.lane)
            if (road.main_road5.lane[d].vehicle == 1):
                (x, y) = main_road6[d]
                pygame.draw.rect(self.screen, (255, 255, 255), pygame.Rect(x, y, 2, 2))
                pygame.display.update()


    def draw_main_road1_pic2(self):
        main_road1=[(1, 413), (7.2, 408.0), (13.4, 403.0), (19.6, 398.0), (25.8, 393.0), (32.0, 388.0), (38.2, 383.0), (44.400000000000006, 378.0), (50.60000000000001, 373.0), (56.80000000000001, 368.0), (63.000000000000014, 363.0), (68.0, 359.5), (73.0, 356.0), (78.6875, 352.1875), (84.375, 348.375), (90.0625, 344.5625), (95.75, 340.75), (101.4375, 336.9375), (107.125, 333.125), (112.8125, 329.3125), (118.5, 325.5), (124.1875, 321.6875), (129.875, 317.875), (135.5625, 314.0625), (141.25, 310.25), (146.9375, 306.4375), (152.625, 302.625), (158.3125, 298.8125), (164.0, 295.0), (169.25, 293.0), (174.5, 291.0), (179.75, 289.0), (185.0, 287.0), (190.25, 285.0), (195.5, 283.0), (200.75, 281.0), (206.0, 279.0), (211.25, 277.0), (216.5, 275.0), (221.75, 273.0), (227.0, 271.0), (232.25, 269.0), (237.5, 267.0), (242.75, 265.0), (248.0, 263.0), (254.5, 261.0), (261.0, 259.0), (267.0, 258.1666666666667), (273.0, 257.33333333333337), (279.0, 256.50000000000006), (285.0, 255.6666666666667), (291.0, 254.83333333333337), (297.0, 254.00000000000003), (303.0, 253.16666666666669), (309.0, 252.33333333333334), (315.0, 251.5), (321.0, 250.66666666666666), (327.0, 249.83333333333331), (333.0, 248.99999999999997), (337.0, 248.5), (341.0, 248.0), (345.0, 247.5), (349.0, 247.0), (354.12, 246.52), (359.24, 246.04000000000002), (364.36, 245.56000000000003), (369.48, 245.08000000000004), (374.6, 244.60000000000005), (379.72, 244.12000000000006), (384.84000000000003, 243.64000000000007), (389.96000000000004, 243.16000000000008), (395.08000000000004, 242.6800000000001), (400.20000000000005, 242.2000000000001), (405.32000000000005, 241.7200000000001), (410.44000000000005, 241.24000000000012), (415.56000000000006, 240.76000000000013), (420.68000000000006, 240.28000000000014), (425.80000000000007, 239.80000000000015), (430.9200000000001, 239.32000000000016), (436.0400000000001, 238.84000000000017), (441.1600000000001, 238.36000000000018), (446.2800000000001, 237.8800000000002), (451.4000000000001, 237.4000000000002), (456.5200000000001, 236.92000000000021), (461.6400000000001, 236.44000000000023), (466.7600000000001, 235.96000000000024), (471.8800000000001, 235.48000000000025), (477.0000000000001, 235.00000000000026), (484.0, 237.0), (491.0, 239.0), (498.0, 241.0), (503.7, 242.33333333333334), (509.4, 243.66666666666669), (515.1, 245.00000000000003), (520.8000000000001, 246.33333333333337), (526.5000000000001, 247.6666666666667), (532.2000000000002, 249.00000000000006), (537.9000000000002, 250.3333333333334), (543.6000000000003, 251.66666666666674), (549.3000000000003, 253.00000000000009), (555.0000000000003, 254.33333333333343), (560.7000000000004, 255.66666666666677), (566.4000000000004, 257.0000000000001), (572.1000000000005, 258.3333333333334), (577.8000000000005, 259.66666666666674), (583.5000000000006, 261.00000000000006), (589.2000000000006, 262.33333333333337), (594.9000000000007, 263.6666666666667), (600.6000000000007, 265.0), (606.3000000000008, 266.3333333333333), (612.0000000000008, 267.66666666666663), (617.7000000000008, 268.99999999999994), (623.4000000000009, 270.33333333333326), (629.1000000000009, 271.6666666666666), (634.800000000001, 272.9999999999999), (640.500000000001, 274.3333333333332), (646.2000000000011, 275.6666666666665), (651.9000000000011, 276.99999999999983), (657.6000000000012, 278.33333333333314), (663.3000000000012, 279.66666666666646), (669.0000000000013, 280.9999999999998)]
        for d in range(14,135):
            if (road.main_road1.lane[d].vehicle == 1):
                (x, y) = main_road1[d-14]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.main_road1.lane[d].vehicle == 2):
                (x, y) = main_road1[d-14]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
    
    def draw_main_road2_pic2(self):
        main_road2=[(3, 417), (9.3, 411.9), (15.600000000000001, 406.79999999999995), (21.900000000000002, 401.69999999999993), (28.200000000000003, 396.5999999999999), (34.5, 391.4999999999999), (40.8, 386.39999999999986), (47.099999999999994, 381.29999999999984), (53.39999999999999, 376.1999999999998), (59.69999999999999, 371.0999999999998), (65.99999999999999, 365.9999999999998), (71.0, 363.0), (76.0, 360.0), (81.6875, 356.25), (87.375, 352.5), (93.0625, 348.75), (98.75, 345.0), (104.4375, 341.25), (110.125, 337.5), (115.8125, 333.75), (121.5, 330.0), (127.1875, 326.25), (132.875, 322.5), (138.5625, 318.75), (144.25, 315.0), (149.9375, 311.25), (155.625, 307.5), (161.3125, 303.75), (167.0, 300.0), (172.1875, 298.0), (177.375, 296.0), (182.5625, 294.0), (187.75, 292.0), (192.9375, 290.0), (198.125, 288.0), (203.3125, 286.0), (208.5, 284.0), (213.6875, 282.0), (218.875, 280.0), (224.0625, 278.0), (229.25, 276.0), (234.4375, 274.0), (239.625, 272.0), (244.8125, 270.0), (250.0, 268.0), (256.0, 265.5), (262.0, 263.0), (268.0, 262.1666666666667), (274.0, 261.33333333333337), (280.0, 260.50000000000006), (286.0, 259.66666666666674), (292.0, 258.8333333333334), (298.0, 258.0000000000001), (304.0, 257.1666666666668), (310.0, 256.3333333333335), (316.0, 255.50000000000014), (322.0, 254.6666666666668), (328.0, 253.83333333333346), (334.0, 253.0000000000001), (338.0, 252.75), (342.0, 252.5), (346.0, 252.25), (350.0, 252.0), (355.08, 251.48), (360.15999999999997, 250.95999999999998), (365.23999999999995, 250.43999999999997), (370.31999999999994, 249.91999999999996), (375.3999999999999, 249.39999999999995), (380.4799999999999, 248.87999999999994), (385.5599999999999, 248.35999999999993), (390.6399999999999, 247.83999999999992), (395.71999999999986, 247.3199999999999), (400.79999999999984, 246.7999999999999), (405.8799999999998, 246.2799999999999), (410.9599999999998, 245.75999999999988), (416.0399999999998, 245.23999999999987), (421.1199999999998, 244.71999999999986), (426.19999999999976, 244.19999999999985), (431.27999999999975, 243.67999999999984), (436.35999999999973, 243.15999999999983), (441.4399999999997, 242.63999999999982), (446.5199999999997, 242.1199999999998), (451.5999999999997, 241.5999999999998), (456.67999999999967, 241.07999999999979), (461.75999999999965, 240.55999999999977), (466.83999999999963, 240.03999999999976), (471.9199999999996, 239.51999999999975), (476.9999999999996, 238.99999999999974), (483.6666666666667, 241.0), (490.33333333333337, 243.0), (497.00000000000006, 245.0), (502.73333333333335, 246.3), (508.4666666666667, 247.60000000000002), (514.2, 248.90000000000003), (519.9333333333334, 250.20000000000005), (525.6666666666667, 251.50000000000006), (531.4000000000001, 252.80000000000007), (537.1333333333334, 254.10000000000008), (542.8666666666668, 255.4000000000001), (548.6000000000001, 256.7000000000001), (554.3333333333335, 258.0000000000001), (560.0666666666668, 259.3000000000001), (565.8000000000002, 260.60000000000014), (571.5333333333335, 261.90000000000015), (577.2666666666669, 263.20000000000016), (583.0000000000002, 264.50000000000017), (588.7333333333336, 265.8000000000002), (594.4666666666669, 267.1000000000002), (600.2000000000003, 268.4000000000002), (605.9333333333336, 269.7000000000002), (611.666666666667, 271.0000000000002), (617.4000000000003, 272.30000000000024), (623.1333333333337, 273.60000000000025), (628.866666666667, 274.90000000000026), (634.6000000000004, 276.2000000000003), (640.3333333333337, 277.5000000000003), (646.0666666666671, 278.8000000000003), (651.8000000000004, 280.1000000000003), (657.5333333333338, 281.4000000000003), (663.2666666666671, 282.70000000000033), (669.0000000000005, 284.00000000000034)]
        for d in range(14,135):
            if (road.main_road2.lane[d].vehicle == 1):
                (x, y) = main_road2[d-14]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.main_road2.lane[d].vehicle == 2):
                (x, y) = main_road2[d-14]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road3_pic2(self):
        main_road3=[(5, 421), (11.5, 415.9), (18.0, 410.79999999999995), (24.5, 405.69999999999993), (31.0, 400.5999999999999), (37.5, 395.4999999999999), (44.0, 390.39999999999986), (50.5, 385.29999999999984), (57.0, 380.1999999999998), (63.5, 375.0999999999998), (70.0, 369.9999999999998), (75.0, 366.5), (80.0, 363.0), (85.6875, 359.375), (91.375, 355.75), (97.0625, 352.125), (102.75, 348.5), (108.4375, 344.875), (114.125, 341.25), (119.8125, 337.625), (125.5, 334.0), (131.1875, 330.375), (136.875, 326.75), (142.5625, 323.125), (148.25, 319.5), (153.9375, 315.875), (159.625, 312.25), (165.3125, 308.625), (171.0, 305.0), (176.0625, 303.0), (181.125, 301.0), (186.1875, 299.0), (191.25, 297.0), (196.3125, 295.0), (201.375, 293.0), (206.4375, 291.0), (211.5, 289.0), (216.5625, 287.0), (221.625, 285.0), (226.6875, 283.0), (231.75, 281.0), (236.8125, 279.0), (241.875, 277.0), (246.9375, 275.0), (252.0, 273.0), (258.5, 271.0), (265.0, 269.0), (270.8333333333333, 268.25), (276.66666666666663, 267.5), (282.49999999999994, 266.75), (288.33333333333326, 266.0), (294.1666666666666, 265.25), (299.9999999999999, 264.5), (305.8333333333332, 263.75), (311.6666666666665, 263.0), (317.49999999999983, 262.25), (323.33333333333314, 261.5), (329.16666666666646, 260.75), (334.9999999999998, 260.0), (339.25, 259.75), (343.5, 259.5), (347.75, 259.25), (352.0, 259.0), (356.96, 258.36), (361.91999999999996, 257.72), (366.87999999999994, 257.08000000000004), (371.8399999999999, 256.44000000000005), (376.7999999999999, 255.80000000000007), (381.7599999999999, 255.16000000000008), (386.71999999999986, 254.5200000000001), (391.67999999999984, 253.8800000000001), (396.6399999999998, 253.24000000000012), (401.5999999999998, 252.60000000000014), (406.5599999999998, 251.96000000000015), (411.51999999999975, 251.32000000000016), (416.47999999999973, 250.68000000000018), (421.4399999999997, 250.0400000000002), (426.3999999999997, 249.4000000000002), (431.3599999999997, 248.76000000000022), (436.31999999999965, 248.12000000000023), (441.27999999999963, 247.48000000000025), (446.2399999999996, 246.84000000000026), (451.1999999999996, 246.20000000000027), (456.15999999999957, 245.5600000000003), (461.11999999999955, 244.9200000000003), (466.07999999999953, 244.2800000000003), (471.0399999999995, 243.64000000000033), (475.9999999999995, 243.00000000000034), (483.0, 245.0), (490.0, 247.0), (497.0, 249.0), (502.76666666666665, 250.36666666666667), (508.5333333333333, 251.73333333333335), (514.3, 253.10000000000002), (520.0666666666666, 254.4666666666667), (525.8333333333333, 255.83333333333337), (531.5999999999999, 257.20000000000005), (537.3666666666666, 258.5666666666667), (543.1333333333332, 259.9333333333334), (548.8999999999999, 261.30000000000007), (554.6666666666665, 262.66666666666674), (560.4333333333332, 264.0333333333334), (566.1999999999998, 265.4000000000001), (571.9666666666665, 266.76666666666677), (577.7333333333331, 268.13333333333344), (583.4999999999998, 269.5000000000001), (589.2666666666664, 270.8666666666668), (595.0333333333331, 272.23333333333346), (600.7999999999997, 273.60000000000014), (606.5666666666664, 274.9666666666668), (612.333333333333, 276.3333333333335), (618.0999999999997, 277.70000000000016), (623.8666666666663, 279.06666666666683), (629.633333333333, 280.4333333333335), (635.3999999999996, 281.8000000000002), (641.1666666666663, 283.16666666666686), (646.9333333333329, 284.53333333333353), (652.6999999999996, 285.9000000000002), (658.4666666666662, 287.2666666666669), (664.2333333333329, 288.63333333333355), (669.9999999999995, 290.0000000000002)]
        for d in range(14,135):
            if (road.main_road3.lane[d].vehicle == 1):
                (x, y) = main_road3[d-14]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.main_road3.lane[d].vehicle == 2):
                (x, y) = main_road3[d-14]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road4_pic2(self):
        main_road4=[(664, 264), (657.7307692307693, 262.65384615384613), (651.4615384615386, 261.30769230769226), (645.1923076923078, 259.9615384615384), (638.9230769230771, 258.6153846153845), (632.6538461538464, 257.26923076923066), (626.3846153846157, 255.92307692307682), (620.115384615385, 254.57692307692298), (613.8461538461543, 253.23076923076914), (607.5769230769235, 251.8846153846153), (601.3076923076928, 250.53846153846146), (595.0384615384621, 249.19230769230762), (588.7692307692314, 247.84615384615378), (582.5000000000007, 246.49999999999994), (576.23076923077, 245.1538461538461), (569.9615384615392, 243.80769230769226), (563.6923076923085, 242.46153846153842), (557.4230769230778, 241.11538461538458), (551.1538461538471, 239.76923076923075), (544.8846153846164, 238.4230769230769), (538.6153846153857, 237.07692307692307), (532.346153846155, 235.73076923076923), (526.0769230769242, 234.3846153846154), (519.8076923076935, 233.03846153846155), (513.5384615384628, 231.6923076923077), (507.269230769232, 230.34615384615387), (501.00000000000125, 229.00000000000003), (491.85714285714283, 227.0), (482.71428571428567, 225.0), (473.5714285714285, 223.0), (464.42857142857133, 221.0), (455.28571428571416, 219.0), (446.142857142857, 217.0), (436.99999999999983, 215.0), (429.6666666666667, 215.0), (422.33333333333337, 215.0), (415.00000000000006, 215.0), (407.66666666666674, 215.0), (400.3333333333334, 215.0), (393.0000000000001, 215.0), (384.8, 216.2), (376.6, 217.39999999999998), (368.40000000000003, 218.59999999999997), (360.20000000000005, 219.79999999999995), (352.00000000000006, 220.99999999999994), (346.6666666666667, 221.33333333333334), (341.33333333333337, 221.66666666666669), (336.00000000000006, 222.00000000000003), (329.4166666666667, 223.16666666666666), (322.83333333333337, 224.33333333333331), (316.25000000000006, 225.49999999999997), (309.66666666666674, 226.66666666666663), (303.0833333333334, 227.8333333333333), (296.5000000000001, 228.99999999999994), (289.9166666666668, 230.1666666666666), (283.3333333333335, 231.33333333333326), (276.75000000000017, 232.49999999999991), (270.16666666666686, 233.66666666666657), (263.58333333333354, 234.83333333333323), (257.0000000000002, 235.9999999999999), (248.0, 238.0), (239.0, 240.0), (233.73333333333332, 242.0), (228.46666666666664, 244.0), (223.19999999999996, 246.0), (217.93333333333328, 248.0), (212.6666666666666, 250.0), (207.39999999999992, 252.0), (202.13333333333324, 254.0), (196.86666666666656, 256.0), (191.59999999999988, 258.0), (186.3333333333332, 260.0), (181.06666666666652, 262.0), (175.79999999999984, 264.0), (170.53333333333316, 266.0), (165.26666666666648, 268.0), (159.9999999999998, 270.0), (154.22222222222223, 273.72222222222223), (148.44444444444446, 277.44444444444446), (142.66666666666669, 281.1666666666667), (136.8888888888889, 284.8888888888889), (131.11111111111114, 288.61111111111114), (125.33333333333337, 292.33333333333337), (119.5555555555556, 296.0555555555556), (113.77777777777783, 299.7777777777778), (108.00000000000006, 303.50000000000006), (102.22222222222229, 307.2222222222223), (96.44444444444451, 310.9444444444445), (90.66666666666674, 314.66666666666674), (84.88888888888897, 318.38888888888897), (79.1111111111112, 322.1111111111112), (73.33333333333343, 325.8333333333334), (67.55555555555566, 329.55555555555566), (61.77777777777788, 333.2777777777779), (56.0000000000001, 337.0000000000001), (52.0, 340.0), (48.0, 343.0), (42.25, 347.25), (36.5, 351.5), (30.75, 355.75), (25.0, 360.0), (19.25, 364.25), (13.5, 368.5), (7.75, 372.75), (2.0, 377.0)]
        for d in range(1627,1732):
            if (road.main_road4.lane[d].vehicle == 1):
                (x, y) = main_road4[d-1627]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.main_road4.lane[d].vehicle == 2):
                (x, y) = main_road4[d-1627]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road5_pic2(self):
        main_road5=[(672, 272), (665.4230769230769, 270.5), (658.8461538461538, 269.0), (652.2692307692307, 267.5), (645.6923076923076, 266.0), (639.1153846153845, 264.5), (632.5384615384614, 263.0), (625.9615384615383, 261.5), (619.3846153846152, 260.0), (612.8076923076922, 258.5), (606.230769230769, 257.0), (599.653846153846, 255.5), (593.0769230769229, 254.0), (586.4999999999998, 252.5), (579.9230769230767, 251.0), (573.3461538461536, 249.5), (566.7692307692305, 248.0), (560.1923076923074, 246.5), (553.6153846153843, 245.0), (547.0384615384612, 243.5), (540.4615384615381, 242.0), (533.884615384615, 240.5), (527.3076923076919, 239.0), (520.7307692307688, 237.5), (514.1538461538457, 236.0), (507.57692307692264, 234.5), (500.99999999999955, 233.0), (491.85714285714283, 231.28571428571428), (482.71428571428567, 229.57142857142856), (473.5714285714285, 227.85714285714283), (464.42857142857133, 226.1428571428571), (455.28571428571416, 224.4285714285714), (446.142857142857, 222.71428571428567), (436.99999999999983, 220.99999999999994), (429.5, 221.0), (422.0, 221.0), (414.5, 221.0), (407.0, 221.0), (399.5, 221.0), (392.0, 221.0), (384.2, 222.2), (376.4, 223.39999999999998), (368.59999999999997, 224.59999999999997), (360.79999999999995, 225.79999999999995), (352.99999999999994, 226.99999999999994), (347.3333333333333, 227.66666666666666), (341.66666666666663, 228.33333333333331), (335.99999999999994, 228.99999999999997), (329.6666666666667, 230.16666666666666), (323.33333333333337, 231.33333333333331), (317.00000000000006, 232.49999999999997), (310.66666666666674, 233.66666666666663), (304.3333333333334, 234.8333333333333), (298.0000000000001, 235.99999999999994), (291.6666666666668, 237.1666666666666), (285.3333333333335, 238.33333333333326), (279.00000000000017, 239.49999999999991), (272.66666666666686, 240.66666666666657), (266.33333333333354, 241.83333333333323), (260.0000000000002, 242.9999999999999), (253.0, 245.0), (246.0, 247.0), (240.46666666666667, 249.06666666666666), (234.93333333333334, 251.13333333333333), (229.4, 253.2), (223.86666666666667, 255.26666666666665), (218.33333333333334, 257.3333333333333), (212.8, 259.4), (207.26666666666668, 261.46666666666664), (201.73333333333335, 263.5333333333333), (196.20000000000002, 265.59999999999997), (190.66666666666669, 267.66666666666663), (185.13333333333335, 269.7333333333333), (179.60000000000002, 271.79999999999995), (174.0666666666667, 273.8666666666666), (168.53333333333336, 275.9333333333333), (163.00000000000003, 277.99999999999994), (157.27777777777777, 281.5), (151.55555555555554, 285.0), (145.83333333333331, 288.5), (140.1111111111111, 292.0), (134.38888888888886, 295.5), (128.66666666666663, 299.0), (122.9444444444444, 302.5), (117.22222222222217, 306.0), (111.49999999999994, 309.5), (105.77777777777771, 313.0), (100.05555555555549, 316.5), (94.33333333333326, 320.0), (88.61111111111103, 323.5), (82.8888888888888, 327.0), (77.16666666666657, 330.5), (71.44444444444434, 334.0), (65.72222222222211, 337.5), (59.99999999999989, 341.0), (56.0, 344.0), (52.0, 347.0), (46.25, 351.625), (40.5, 356.25), (34.75, 360.875), (29.0, 365.5), (23.25, 370.125), (17.5, 374.75), (11.75, 379.375), (6.0, 384.0)]
        for d in range(1627,1732):
            if (road.main_road5.lane[d].vehicle == 1):
                (x, y) = main_road5[d-1627]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.main_road5.lane[d].vehicle == 2):
                (x, y) = main_road5[d-1627]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road6_pic2(self):
        main_road6=[(671, 276), (664.4230769230769, 274.5), (657.8461538461538, 273.0), (651.2692307692307, 271.5), (644.6923076923076, 270.0), (638.1153846153845, 268.5), (631.5384615384614, 267.0), (624.9615384615383, 265.5), (618.3846153846152, 264.0), (611.8076923076922, 262.5), (605.230769230769, 261.0), (598.653846153846, 259.5), (592.0769230769229, 258.0), (585.4999999999998, 256.5), (578.9230769230767, 255.0), (572.3461538461536, 253.5), (565.7692307692305, 252.0), (559.1923076923074, 250.5), (552.6153846153843, 249.0), (546.0384615384612, 247.5), (539.4615384615381, 246.0), (532.884615384615, 244.5), (526.3076923076919, 243.0), (519.7307692307688, 241.5), (513.1538461538457, 240.0), (506.57692307692264, 238.5), (499.99999999999955, 237.0), (490.85714285714283, 235.42857142857142), (481.71428571428567, 233.85714285714283), (472.5714285714285, 232.28571428571425), (463.42857142857133, 230.71428571428567), (454.28571428571416, 229.14285714285708), (445.142857142857, 227.5714285714285), (435.99999999999983, 225.99999999999991), (428.6666666666667, 226.0), (421.33333333333337, 226.0), (414.00000000000006, 226.0), (406.66666666666674, 226.0), (399.3333333333334, 226.0), (392.0000000000001, 226.0), (384.4, 227.0), (376.79999999999995, 228.0), (369.19999999999993, 229.0), (361.5999999999999, 230.0), (353.9999999999999, 231.0), (348.3333333333333, 232.33333333333334), (342.66666666666663, 233.66666666666669), (336.99999999999994, 235.00000000000003), (330.6666666666667, 236.08333333333334), (324.33333333333337, 237.16666666666669), (318.00000000000006, 238.25000000000003), (311.66666666666674, 239.33333333333337), (305.3333333333334, 240.4166666666667), (299.0000000000001, 241.50000000000006), (292.6666666666668, 242.5833333333334), (286.3333333333335, 243.66666666666674), (280.00000000000017, 244.75000000000009), (273.66666666666686, 245.83333333333343), (267.33333333333354, 246.91666666666677), (261.0000000000002, 248.0000000000001), (254.5, 250.0), (248.0, 252.0), (242.46666666666667, 254.06666666666666), (236.93333333333334, 256.1333333333333), (231.4, 258.2), (225.86666666666667, 260.26666666666665), (220.33333333333334, 262.3333333333333), (214.8, 264.4), (209.26666666666668, 266.46666666666664), (203.73333333333335, 268.5333333333333), (198.20000000000002, 270.59999999999997), (192.66666666666669, 272.66666666666663), (187.13333333333335, 274.7333333333333), (181.60000000000002, 276.79999999999995), (176.0666666666667, 278.8666666666666), (170.53333333333336, 280.9333333333333), (165.00000000000003, 282.99999999999994), (159.38888888888889, 286.44444444444446), (153.77777777777777, 289.8888888888889), (148.16666666666666, 293.33333333333337), (142.55555555555554, 296.7777777777778), (136.94444444444443, 300.2222222222223), (131.33333333333331, 303.66666666666674), (125.7222222222222, 307.1111111111112), (120.11111111111109, 310.55555555555566), (114.49999999999997, 314.0000000000001), (108.88888888888886, 317.44444444444457), (103.27777777777774, 320.888888888889), (97.66666666666663, 324.3333333333335), (92.05555555555551, 327.77777777777794), (86.4444444444444, 331.2222222222224), (80.83333333333329, 334.66666666666686), (75.22222222222217, 338.1111111111113), (69.61111111111106, 341.55555555555577), (63.99999999999994, 345.0000000000002), (59.0, 349.0), (54.0, 353.0), (48.375, 357.625), (42.75, 362.25), (37.125, 366.875), (31.5, 371.5), (25.875, 376.125), (20.25, 380.75), (14.625, 385.375), (9.0, 390.0)]
        for d in range(1627,1732):
            if (road.main_road6.lane[d].vehicle == 1):
                (x, y) = main_road6[d-1627]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.main_road6.lane[d].vehicle == 2):
                (x, y) = main_road6[d-1627]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_r1_pic2(self):
        r1=[(1, 301), (4.727272727272727, 304.27272727272725), (8.454545454545453, 307.5454545454545), (12.18181818181818, 310.81818181818176), (15.909090909090907, 314.090909090909), (19.636363636363633, 317.36363636363626), (23.36363636363636, 320.6363636363635), (27.090909090909086, 323.90909090909076), (30.818181818181813, 327.181818181818), (34.54545454545454, 330.45454545454527), (38.272727272727266, 333.7272727272725), (41.99999999999999, 336.9999999999998), (46.333333333333336, 342.0), (50.66666666666667, 347.0), (55.00000000000001, 352.0), (56.75, 354.25), (58.5, 356.5), (60.25, 358.75), (62.0, 361.0), (65.33333333333333, 364.6666666666667), (68.66666666666666, 368.33333333333337), (71.99999999999999, 372.00000000000006), (77.41666666666667, 375.5833333333333), (82.83333333333334, 379.16666666666663), (88.25000000000001, 382.74999999999994), (93.66666666666669, 386.33333333333326), (99.08333333333336, 389.9166666666666), (104.50000000000003, 393.4999999999999), (109.9166666666667, 397.0833333333332), (115.33333333333337, 400.6666666666665), (120.75000000000004, 404.24999999999983), (126.16666666666671, 407.83333333333314), (131.58333333333337, 411.41666666666646), (137.00000000000003, 414.9999999999998)]
        for d in range(34):
            if (road.r1.lane[d].vehicle == 1):
                (x, y) = r1[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r1.lane[d].vehicle == 2):
                (x, y) = r1[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
    
    def draw_r2_pic2(self):
        r2=[(140, 410), (134.45454545454547, 406.45454545454544), (128.90909090909093, 402.9090909090909), (123.36363636363639, 399.3636363636363), (117.81818181818184, 395.81818181818176), (112.2727272727273, 392.2727272727272), (106.72727272727275, 388.72727272727263), (101.1818181818182, 385.1818181818181), (95.63636363636365, 381.6363636363635), (90.09090909090911, 378.09090909090895), (84.54545454545456, 374.5454545454544), (79.00000000000001, 370.99999999999983), (75.33333333333333, 367.0), (71.66666666666666, 363.0), (67.99999999999999, 359.0), (66.0, 357.25), (64.0, 355.5), (62.0, 353.75), (60.0, 352.0), (57.333333333333336, 348.3333333333333), (54.66666666666667, 344.66666666666663), (52.00000000000001, 340.99999999999994), (47.916666666666664, 337.4166666666667), (43.83333333333333, 333.83333333333337), (39.74999999999999, 330.25000000000006), (35.66666666666666, 326.66666666666674), (31.583333333333325, 323.0833333333334), (27.499999999999993, 319.5000000000001), (23.41666666666666, 315.9166666666668), (19.33333333333333, 312.3333333333335), (15.249999999999996, 308.75000000000017), (11.166666666666664, 305.16666666666686), (7.083333333333331, 301.58333333333354), (2.9999999999999982, 298.0000000000002)]
        for d in range(34):
            if (road.r2.lane[d].vehicle == 1):
                (x, y) = r2[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r2.lane[d].vehicle == 2):
                (x, y) = r2[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
              
    def draw_r3_pic2(self):
        r3=[(241, 371), (235.5, 365.3333333333333), (230.0, 359.66666666666663), (224.5, 353.99999999999994), (219.0, 348.33333333333326), (213.5, 342.6666666666666), (208.0, 336.9999999999999), (202.5, 331.3333333333332), (197.0, 325.6666666666665), (191.5, 319.99999999999983), (186.0, 314.33333333333314), (180.5, 308.66666666666646), (175.0, 302.9999999999998)]
        for d in range(13):
            if (road.r3.lane[d].vehicle == 1):
                (x, y) = r3[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r3.lane[d].vehicle == 2):
                (x, y) = r3[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()      
            
    def draw_r4_pic2(self):
        r4=[(182, 197), (187.0909090909091, 200.63636363636363), (192.1818181818182, 204.27272727272725), (197.27272727272728, 207.90909090909088), (202.36363636363637, 211.5454545454545), (207.45454545454547, 215.18181818181813), (212.54545454545456, 218.81818181818176), (217.63636363636365, 222.45454545454538), (222.72727272727275, 226.090909090909), (227.81818181818184, 229.72727272727263), (232.90909090909093, 233.36363636363626), (238.00000000000003, 236.9999999999999), (241.33333333333334, 242.66666666666666), (244.66666666666669, 248.33333333333331), (248.00000000000003, 253.99999999999997), (249.0, 255.25), (250.0, 256.5), (251.0, 257.75), (252.0, 259.0), (254.66666666666666, 263.6666666666667), (257.3333333333333, 268.33333333333337), (260.0, 273.00000000000006), (263.0833333333333, 277.4166666666667), (266.16666666666663, 281.83333333333337), (269.24999999999994, 286.25000000000006), (272.33333333333326, 290.66666666666674), (275.4166666666666, 295.0833333333334), (278.4999999999999, 299.5000000000001), (281.5833333333332, 303.9166666666668), (284.6666666666665, 308.3333333333335), (287.74999999999983, 312.75000000000017), (290.83333333333314, 317.16666666666686), (293.91666666666646, 321.58333333333354), (296.9999999999998, 326.0000000000002)]
        for d in range(34):
            if (road.r4.lane[d].vehicle == 1):
                (x, y) = r4[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r4.lane[d].vehicle == 2):
                (x, y) = r4[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_r5_pic2(self):
        r5=[(261, 261), (260.25, 259.25), (259.5, 257.5), (258.75, 255.75), (258.0, 254.0), (255.0, 248.66666666666666), (252.0, 243.33333333333331), (249.0, 237.99999999999997), (243.66666666666666, 234.41666666666666), (238.33333333333331, 230.83333333333331), (232.99999999999997, 227.24999999999997), (227.66666666666663, 223.66666666666663), (222.3333333333333, 220.0833333333333), (216.99999999999994, 216.49999999999994), (211.6666666666666, 212.9166666666666), (206.33333333333326, 209.33333333333326), (200.99999999999991, 205.74999999999991), (195.66666666666657, 202.16666666666657), (190.33333333333323, 198.58333333333323), (184.9999999999999, 194.9999999999999)]
        for d in range(20):
            if (road.r5.lane[d].vehicle == 1):
                (x, y) = r5[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r5.lane[d].vehicle == 2):
                (x, y) = r5[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()             
                
    def draw_r6_pic2(self):
        r6=[(332, 156), (332.3636363636364, 161.63636363636363), (332.72727272727275, 167.27272727272725), (333.0909090909091, 172.90909090909088), (333.4545454545455, 178.5454545454545), (333.81818181818187, 184.18181818181813), (334.18181818181824, 189.81818181818176), (334.5454545454546, 195.45454545454538), (334.909090909091, 201.090909090909), (335.27272727272737, 206.72727272727263), (335.63636363636374, 212.36363636363626), (336.0000000000001, 217.9999999999999), (336.3333333333333, 224.33333333333334), (336.66666666666663, 230.66666666666669), (336.99999999999994, 237.00000000000003), (337.25, 239.0), (337.5, 241.0), (337.75, 243.0), (338.0, 245.0), (338.6666666666667, 250.33333333333334), (339.33333333333337, 255.66666666666669), (340.00000000000006, 261.0), (340.3333333333333, 265.5), (340.66666666666663, 270.0), (340.99999999999994, 274.5), (341.33333333333326, 279.0), (341.6666666666666, 283.5), (341.9999999999999, 288.0), (342.3333333333332, 292.5), (342.6666666666665, 297.0), (342.99999999999983, 301.5), (343.33333333333314, 306.0), (343.66666666666646, 310.5), (343.9999999999998, 315.0)]
        for d in range(34):
            if (road.r6.lane[d].vehicle == 1):
                (x, y) = r6[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r6.lane[d].vehicle == 2):
                (x, y) = r6[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
       
    def draw_r7_pic2(self):
        r7=[(336, 149), (336.3636363636364, 155.1818181818182), (336.72727272727275, 161.36363636363637), (337.0909090909091, 167.54545454545456), (337.4545454545455, 173.72727272727275), (337.81818181818187, 179.90909090909093), (338.18181818181824, 186.09090909090912), (338.5454545454546, 192.2727272727273), (338.909090909091, 198.4545454545455), (339.27272727272737, 204.63636363636368), (339.63636363636374, 210.81818181818187), (340.0000000000001, 217.00000000000006), (341.0, 223.0), (342.0, 229.0), (343.0, 235.0), (342.8, 237.6), (342.6, 240.2), (342.40000000000003, 242.79999999999998), (342.20000000000005, 245.39999999999998), (342.00000000000006, 247.99999999999997)]
        for d in range(20):
            if (road.r7.lane[d].vehicle == 1):
                (x, y) = r7[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r7.lane[d].vehicle == 2):
                (x, y) = r7[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()         
                
    def draw_r8_pic2(self):
        r8=[(349, 316), (348.90909090909093, 311.1818181818182), (348.81818181818187, 306.3636363636364), (348.7272727272728, 301.54545454545456), (348.63636363636374, 296.72727272727275), (348.5454545454547, 291.90909090909093), (348.4545454545456, 287.0909090909091), (348.36363636363654, 282.2727272727273), (348.2727272727275, 277.4545454545455), (348.1818181818184, 272.6363636363637), (348.09090909090935, 267.81818181818187), (348.0000000000003, 263.00000000000006), (347.3333333333333, 257.6666666666667), (346.66666666666663, 252.33333333333334), (345.99999999999994, 247.0), (347.0, 244.0), (348.0, 241.0), (349.0, 238.0), (350.0, 235.0), (349.0, 230.0), (348.0, 225.0), (347.0, 220.0), (346.4166666666667, 214.16666666666666), (345.83333333333337, 208.33333333333331), (345.25000000000006, 202.49999999999997), (344.66666666666674, 196.66666666666663), (344.0833333333334, 190.8333333333333), (343.5000000000001, 184.99999999999994), (342.9166666666668, 179.1666666666666), (342.3333333333335, 173.33333333333326), (341.75000000000017, 167.49999999999991), (341.16666666666686, 161.66666666666657), (340.58333333333354, 155.83333333333323), (340.0000000000002, 149.9999999999999)]
        for d in range(34):
            if (road.r8.lane[d].vehicle == 1):
                (x, y) = r8[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r8.lane[d].vehicle == 2):
                (x, y) = r8[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                              
    def draw_r9_pic2(self):
        r9=[(356, 318), (355.75, 313.1666666666667), (355.5, 308.33333333333337), (355.25, 303.50000000000006), (355.0, 298.66666666666674), (354.75, 293.8333333333334), (354.5, 289.0000000000001), (354.25, 284.1666666666668), (354.0, 279.3333333333335), (353.75, 274.50000000000017), (353.5, 269.66666666666686), (353.25, 264.83333333333354), (353.0, 260.0000000000002)]
        for d in range(13):
            if (road.r9.lane[d].vehicle == 1):
                (x, y) = r9[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r9.lane[d].vehicle == 2):
                (x, y) = r9[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                              
    def draw_r10_pic2(self):
        r10=[(384, 218), (381.0833333333333, 213.25), (378.16666666666663, 208.5), (375.24999999999994, 203.75), (372.33333333333326, 199.0), (369.4166666666666, 194.25), (366.4999999999999, 189.5), (363.5833333333332, 184.75), (360.6666666666665, 180.0), (357.74999999999983, 175.25), (354.83333333333314, 170.5), (351.91666666666646, 165.75), (348.9999999999998, 161.0)]
        for d in range(13):
            if (road.r10.lane[d].vehicle == 1):
                (x, y) = r10[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r10.lane[d].vehicle == 2):
                (x, y) = r10[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
    
    def draw_r11_pic2(self):
        r11=[(437, 217), (436.1666666666667, 211.91666666666666), (435.33333333333337, 206.83333333333331), (434.50000000000006, 201.74999999999997), (433.66666666666674, 196.66666666666663), (432.8333333333334, 191.5833333333333), (432.0000000000001, 186.49999999999994), (431.1666666666668, 181.4166666666666), (430.3333333333335, 176.33333333333326), (429.50000000000017, 171.24999999999991), (428.66666666666686, 166.16666666666657), (427.83333333333354, 161.08333333333323), (427.0000000000002, 155.9999999999999)]
        for d in range(13):
            if (road.r11.lane[d].vehicle == 1):
                (x, y) = r11[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r11.lane[d].vehicle == 2):
                (x, y) = r11[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
               
    def draw_r12_pic2(self):
        r12=[(557, 146), (550.0833333333334, 152.41666666666666), (543.1666666666667, 158.83333333333331), (536.2500000000001, 165.24999999999997), (529.3333333333335, 171.66666666666663), (522.4166666666669, 178.0833333333333), (515.5000000000002, 184.49999999999994), (508.58333333333354, 190.9166666666666), (501.66666666666686, 197.33333333333326), (494.75000000000017, 203.74999999999991), (487.8333333333335, 210.16666666666657), (480.9166666666668, 216.58333333333323), (474.0000000000001, 222.9999999999999)]
        for d in range(13):
            if (road.r12.lane[d].vehicle == 1):
                (x, y) = r12[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r12.lane[d].vehicle == 2):
                (x, y) = r12[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_r13_pic2(self):
        r13=[(563, 149), (555.8181818181819, 155.36363636363637), (548.6363636363637, 161.72727272727275), (541.4545454545456, 168.09090909090912), (534.2727272727275, 174.4545454545455), (527.0909090909093, 180.81818181818187), (519.9090909090912, 187.18181818181824), (512.7272727272731, 193.54545454545462), (505.5454545454549, 199.909090909091), (498.3636363636367, 206.27272727272737), (491.1818181818185, 212.63636363636374), (484.00000000000034, 219.0000000000001), (484.0, 224.0), (484.0, 229.0), (484.0, 234.0), (484.0, 239.0)]
        for d in range(16):
            if (road.r13.lane[d].vehicle == 1):
                (x, y) = r13[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r13.lane[d].vehicle == 2):
                (x, y) = r13[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
     
    def draw_r14_pic2(self):
        r14=[(499, 243), (496.6666666666667, 237.66666666666666), (494.33333333333337, 232.33333333333331), (492.00000000000006, 226.99999999999997), (498.0833333333333, 220.5), (504.16666666666663, 214.0), (510.24999999999994, 207.5), (516.3333333333333, 201.0), (522.4166666666666, 194.5), (528.5, 188.0), (534.5833333333334, 181.5), (540.6666666666667, 175.0), (546.7500000000001, 168.5), (552.8333333333335, 162.0), (558.9166666666669, 155.5), (565.0000000000002, 149.0)]
        for d in range(16):
            if (road.r14.lane[d].vehicle == 1):
                (x, y) = r14[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r14.lane[d].vehicle == 2):
                (x, y) = r14[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()    
           
    def draw_r15_pic2(self):
        r15=[(502, 229), (507.3333333333333, 222.66666666666666), (512.6666666666666, 216.33333333333331), (518.0, 209.99999999999997), (523.3333333333334, 203.66666666666663), (528.6666666666667, 197.3333333333333), (534.0000000000001, 190.99999999999994), (539.3333333333335, 184.6666666666666), (544.6666666666669, 178.33333333333326), (550.0000000000002, 171.99999999999991), (555.3333333333336, 165.66666666666657), (560.666666666667, 159.33333333333323), (566.0000000000003, 152.9999999999999)]
        for d in range(13):
            if (road.r15.lane[d].vehicle == 1):
                (x, y) = r15[d]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif(road.r15.lane[d].vehicle == 2):
                (x, y) = r15[d]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
                
    def draw_main_road1_pic3(self):
        main_road1=[(3, 284), (9.25, 284.95), (15.5, 285.9), (21.75, 286.84999999999997), (28.0, 287.79999999999995), (34.25, 288.74999999999994), (40.5, 289.69999999999993), (46.75, 290.6499999999999), (53.0, 291.5999999999999), (59.25, 292.5499999999999), (65.5, 293.4999999999999), (71.75, 294.4499999999999), (78.0, 295.39999999999986), (84.25, 296.34999999999985), (90.5, 297.29999999999984), (96.75, 298.24999999999983), (103.0, 299.1999999999998), (109.25, 300.1499999999998), (115.5, 301.0999999999998), (121.75, 302.0499999999998), (128.0, 302.9999999999998), (133.48, 301.08), (138.95999999999998, 299.15999999999997), (144.43999999999997, 297.23999999999995), (149.91999999999996, 295.31999999999994), (155.39999999999995, 293.3999999999999), (160.87999999999994, 291.4799999999999), (166.35999999999993, 289.5599999999999), (171.83999999999992, 287.6399999999999), (177.3199999999999, 285.71999999999986), (182.7999999999999, 283.79999999999984), (188.2799999999999, 281.8799999999998), (193.75999999999988, 279.9599999999998), (199.23999999999987, 278.0399999999998), (204.71999999999986, 276.1199999999998), (210.19999999999985, 274.19999999999976), (215.67999999999984, 272.27999999999975), (221.15999999999983, 270.35999999999973), (226.63999999999982, 268.4399999999997), (232.1199999999998, 266.5199999999997), (237.5999999999998, 264.5999999999997), (243.07999999999979, 262.67999999999967), (248.55999999999977, 260.75999999999965), (254.03999999999976, 258.83999999999963), (259.51999999999975, 256.9199999999996), (264.9999999999998, 254.99999999999963), (270.3, 249.5), (275.6, 244.0), (280.90000000000003, 238.5), (286.20000000000005, 233.0), (291.50000000000006, 227.5), (296.80000000000007, 222.0), (302.1000000000001, 216.5), (307.4000000000001, 211.0), (312.7000000000001, 205.5), (318.0000000000001, 200.0), (320.54545454545456, 194.57575757575756), (323.0909090909091, 189.15151515151513), (325.6363636363637, 183.7272727272727), (328.18181818181824, 178.30303030303025), (330.7272727272728, 172.87878787878782), (333.27272727272737, 167.45454545454538), (335.8181818181819, 162.03030303030295), (338.3636363636365, 156.6060606060605), (340.90909090909105, 151.18181818181807), (343.4545454545456, 145.75757575757564), (346.00000000000017, 140.3333333333332), (348.54545454545473, 134.90909090909076), (351.0909090909093, 129.48484848484833), (353.63636363636385, 124.0606060606059), (356.1818181818184, 118.63636363636348), (358.727272727273, 113.21212121212106), (361.27272727272754, 107.78787878787864), (363.8181818181821, 102.36363636363622), (366.36363636363666, 96.9393939393938), (368.9090909090912, 91.51515151515137), (371.4545454545458, 86.09090909090895), (374.00000000000034, 80.66666666666653), (376.5454545454549, 75.24242424242411), (379.09090909090946, 69.81818181818169), (381.636363636364, 64.39393939393926), (384.1818181818186, 58.96969696969684), (386.72727272727315, 53.54545454545442), (389.2727272727277, 48.121212121212), (391.81818181818227, 42.696969696969575), (394.36363636363683, 37.27272727272715), (396.9090909090914, 31.84848484848473), (399.45454545454595, 26.42424242424231), (402.0000000000005, 20.999999999999886), (399.0, 15.0), (396.0, 9.0), (385.8, 8.8), (375.6, 8.600000000000001), (365.40000000000003, 8.400000000000002), (355.20000000000005, 8.200000000000003), (345.00000000000006, 8.000000000000004), (332.0, 9.0), (319.0, 10.0), (306.0, 11.0), (293.0, 12.0), (280.0, 13.0), (281.7391304347826, 21.695652173913043), (283.47826086956525, 30.391304347826086), (285.21739130434787, 39.086956521739125), (286.9565217391305, 47.78260869565217), (288.6956521739131, 56.47826086956522), (290.43478260869574, 65.17391304347827), (292.17391304347836, 73.86956521739131), (293.913043478261, 82.56521739130436), (295.6521739130436, 91.2608695652174), (297.39130434782624, 99.95652173913045), (299.13043478260886, 108.6521739130435), (300.8695652173915, 117.34782608695654), (302.6086956521741, 126.04347826086959), (304.34782608695673, 134.73913043478262), (306.08695652173935, 143.43478260869566), (307.826086956522, 152.1304347826087), (309.5652173913046, 160.82608695652172), (311.3043478260872, 169.52173913043475), (313.04347826086985, 178.21739130434779), (314.78260869565247, 186.91304347826082), (316.5217391304351, 195.60869565217385), (318.2608695652177, 204.30434782608688), (320.00000000000034, 212.99999999999991), (324.03333333333336, 219.23333333333332), (328.0666666666667, 225.46666666666664), (332.1000000000001, 231.69999999999996), (336.13333333333344, 237.93333333333328), (340.1666666666668, 244.1666666666666), (344.20000000000016, 250.39999999999992), (348.2333333333335, 256.63333333333327), (352.2666666666669, 262.8666666666666), (356.30000000000024, 269.09999999999997), (360.3333333333336, 275.3333333333333), (364.36666666666696, 281.56666666666666), (368.4000000000003, 287.8), (372.4333333333337, 294.03333333333336), (376.46666666666704, 300.2666666666667), (380.5000000000004, 306.50000000000006), (384.53333333333376, 312.7333333333334), (388.5666666666671, 318.96666666666675), (392.6000000000005, 325.2000000000001), (396.63333333333384, 331.43333333333345), (400.6666666666672, 337.6666666666668), (404.70000000000056, 343.90000000000015), (408.7333333333339, 350.1333333333335), (412.7666666666673, 356.36666666666684), (416.80000000000064, 362.6000000000002), (420.833333333334, 368.83333333333354), (424.86666666666736, 375.0666666666669), (428.9000000000007, 381.30000000000024), (432.9333333333341, 387.5333333333336), (436.96666666666744, 393.76666666666694), (441.0000000000008, 400.0000000000003), (447.7, 410.5), (454.4, 421.0), (461.09999999999997, 431.5), (467.79999999999995, 442.0), (474.49999999999994, 452.5), (481.19999999999993, 463.0), (487.8999999999999, 473.5), (494.5999999999999, 484.0), (501.2999999999999, 494.5), (507.9999999999999, 505.0), (509.8, 515.5), (511.6, 526.0), (513.4, 536.5), (515.1999999999999, 547.0), (516.9999999999999, 557.5), (518.7999999999998, 568.0), (520.5999999999998, 578.5), (522.3999999999997, 589.0), (524.1999999999997, 599.5), (525.9999999999997, 610.0), (527.7999999999996, 620.5), (529.5999999999996, 631.0), (531.3999999999995, 641.5), (533.1999999999995, 652.0), (534.9999999999994, 662.5), (536.7999999999994, 673.0), (538.5999999999993, 683.5), (540.3999999999993, 694.0), (542.1999999999992, 704.5), (543.9999999999992, 715.0), (550.6666666666666, 719.2), (557.3333333333333, 723.4000000000001), (563.9999999999999, 727.6000000000001), (570.6666666666665, 731.8000000000002), (577.3333333333331, 736.0000000000002), (583.9999999999998, 740.2000000000003), (590.6666666666664, 744.4000000000003), (597.333333333333, 748.6000000000004), (603.9999999999997, 752.8000000000004), (610.6666666666663, 757.0000000000005), (617.3333333333329, 761.2000000000005), (623.9999999999995, 765.4000000000005), (630.6666666666662, 769.6000000000006), (637.3333333333328, 773.8000000000006), (643.9999999999994, 778.0000000000007)]
        for d in range(127,326):
            if (road.main_road1.lane[d].vehicle == 1):
                (x, y) = main_road1[d-127]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road1.lane[d].vehicle == 2):
                (x, y) = main_road1[d-127]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
         
    def draw_main_road2_pic3(self):
        main_road2=[(2, 288), (8.6, 288.95), (15.2, 289.9), (21.799999999999997, 290.84999999999997), (28.4, 291.79999999999995), (35.0, 292.74999999999994), (41.6, 293.69999999999993), (48.2, 294.6499999999999), (54.800000000000004, 295.5999999999999), (61.400000000000006, 296.5499999999999), (68.0, 297.4999999999999), (74.6, 298.4499999999999), (81.19999999999999, 299.39999999999986), (87.79999999999998, 300.34999999999985), (94.39999999999998, 301.29999999999984), (100.99999999999997, 302.24999999999983), (107.59999999999997, 303.1999999999998), (114.19999999999996, 304.1499999999998), (120.79999999999995, 305.0999999999998), (127.39999999999995, 306.0499999999998), (133.99999999999994, 306.9999999999998), (139.32, 305.04), (144.64, 303.08000000000004), (149.95999999999998, 301.12000000000006), (155.27999999999997, 299.1600000000001), (160.59999999999997, 297.2000000000001), (165.91999999999996, 295.2400000000001), (171.23999999999995, 293.28000000000014), (176.55999999999995, 291.32000000000016), (181.87999999999994, 289.3600000000002), (187.19999999999993, 287.4000000000002), (192.51999999999992, 285.4400000000002), (197.83999999999992, 283.48000000000025), (203.1599999999999, 281.52000000000027), (208.4799999999999, 279.5600000000003), (213.7999999999999, 277.6000000000003), (219.1199999999999, 275.6400000000003), (224.43999999999988, 273.68000000000035), (229.75999999999988, 271.72000000000037), (235.07999999999987, 269.7600000000004), (240.39999999999986, 267.8000000000004), (245.71999999999986, 265.84000000000043), (251.03999999999985, 263.88000000000045), (256.35999999999984, 261.92000000000047), (261.67999999999984, 259.9600000000005), (266.99999999999983, 258.0000000000005), (272.5, 252.4), (278.0, 246.8), (283.5, 241.20000000000002), (289.0, 235.60000000000002), (294.5, 230.00000000000003), (300.0, 224.40000000000003), (305.5, 218.80000000000004), (311.0, 213.20000000000005), (316.5, 207.60000000000005), (322.0, 202.00000000000006), (324.54545454545456, 196.4848484848485), (327.0909090909091, 190.969696969697), (329.6363636363637, 185.4545454545455), (332.18181818181824, 179.939393939394), (334.7272727272728, 174.4242424242425), (337.27272727272737, 168.909090909091), (339.8181818181819, 163.3939393939395), (342.3636363636365, 157.878787878788), (344.90909090909105, 152.3636363636365), (347.4545454545456, 146.848484848485), (350.00000000000017, 141.33333333333348), (352.54545454545473, 135.81818181818198), (355.0909090909093, 130.30303030303048), (357.63636363636385, 124.78787878787897), (360.1818181818184, 119.27272727272745), (362.727272727273, 113.75757575757594), (365.27272727272754, 108.24242424242442), (367.8181818181821, 102.7272727272729), (370.36363636363666, 97.21212121212139), (372.9090909090912, 91.69696969696987), (375.4545454545458, 86.18181818181836), (378.00000000000034, 80.66666666666684), (380.5454545454549, 75.15151515151533), (383.09090909090946, 69.63636363636381), (385.636363636364, 64.1212121212123), (388.1818181818186, 58.60606060606078), (390.72727272727315, 53.090909090909264), (393.2727272727277, 47.57575757575775), (395.81818181818227, 42.06060606060623), (398.36363636363683, 36.54545454545472), (400.9090909090914, 31.0303030303032), (403.45454545454595, 25.515151515151686), (406.0000000000005, 20.00000000000017), (403.0, 12.0), (400.0, 4.0), (389.2, 3.8), (378.4, 3.5999999999999996), (367.59999999999997, 3.3999999999999995), (356.79999999999995, 3.1999999999999993), (345.99999999999994, 2.999999999999999), (331.6, 4.4), (317.20000000000005, 5.800000000000001), (302.80000000000007, 7.200000000000001), (288.4000000000001, 8.600000000000001), (274.0000000000001, 10.000000000000002), (275.7826086956522, 18.913043478260867), (277.5652173913044, 27.826086956521735), (279.34782608695656, 36.7391304347826), (281.13043478260875, 45.65217391304347), (282.91304347826093, 54.56521739130434), (284.6956521739131, 63.478260869565204), (286.4782608695653, 72.39130434782608), (288.2608695652175, 81.30434782608695), (290.0434782608697, 90.21739130434783), (291.82608695652186, 99.1304347826087), (293.60869565217405, 108.04347826086958), (295.39130434782624, 116.95652173913045), (297.1739130434784, 125.86956521739133), (298.9565217391306, 134.7826086956522), (300.7391304347828, 143.69565217391306), (302.521739130435, 152.60869565217394), (304.30434782608717, 161.5217391304348), (306.08695652173935, 170.43478260869568), (307.86956521739154, 179.34782608695656), (309.6521739130437, 188.26086956521743), (311.4347826086959, 197.1739130434783), (313.2173913043481, 206.08695652173918), (315.0000000000003, 215.00000000000006), (319.06666666666666, 221.23333333333332), (323.1333333333333, 227.46666666666664), (327.2, 233.69999999999996), (331.26666666666665, 239.93333333333328), (335.3333333333333, 246.1666666666666), (339.4, 252.39999999999992), (343.46666666666664, 258.63333333333327), (347.5333333333333, 264.8666666666666), (351.59999999999997, 271.09999999999997), (355.66666666666663, 277.3333333333333), (359.7333333333333, 283.56666666666666), (363.79999999999995, 289.8), (367.8666666666666, 296.03333333333336), (371.9333333333333, 302.2666666666667), (375.99999999999994, 308.50000000000006), (380.0666666666666, 314.7333333333334), (384.13333333333327, 320.96666666666675), (388.19999999999993, 327.2000000000001), (392.2666666666666, 333.43333333333345), (396.33333333333326, 339.6666666666668), (400.3999999999999, 345.90000000000015), (404.4666666666666, 352.1333333333335), (408.53333333333325, 358.36666666666684), (412.5999999999999, 364.6000000000002), (416.6666666666666, 370.83333333333354), (420.73333333333323, 377.0666666666669), (424.7999999999999, 383.30000000000024), (428.86666666666656, 389.5333333333336), (432.9333333333332, 395.76666666666694), (436.9999999999999, 402.0000000000003), (443.5, 412.5), (450.0, 423.0), (456.5, 433.5), (463.0, 444.0), (469.5, 454.5), (476.0, 465.0), (482.5, 475.5), (489.0, 486.0), (495.5, 496.5), (502.0, 507.0), (503.85, 517.5), (505.70000000000005, 528.0), (507.55000000000007, 538.5), (509.4000000000001, 549.0), (511.2500000000001, 559.5), (513.1000000000001, 570.0), (514.9500000000002, 580.5), (516.8000000000002, 591.0), (518.6500000000002, 601.5), (520.5000000000002, 612.0), (522.3500000000003, 622.5), (524.2000000000003, 633.0), (526.0500000000003, 643.5), (527.9000000000003, 654.0), (529.7500000000003, 664.5), (531.6000000000004, 675.0), (533.4500000000004, 685.5), (535.3000000000004, 696.0), (537.1500000000004, 706.5), (539.0000000000005, 717.0), (545.6666666666666, 721.2666666666667), (552.3333333333333, 725.5333333333333), (558.9999999999999, 729.8), (565.6666666666665, 734.0666666666666), (572.3333333333331, 738.3333333333333), (578.9999999999998, 742.5999999999999), (585.6666666666664, 746.8666666666666), (592.333333333333, 751.1333333333332), (598.9999999999997, 755.3999999999999), (605.6666666666663, 759.6666666666665), (612.3333333333329, 763.9333333333332), (618.9999999999995, 768.1999999999998), (625.6666666666662, 772.4666666666665), (632.3333333333328, 776.7333333333331), (638.9999999999994, 780.9999999999998)]
        for d in range(127,326):
            if (road.main_road2.lane[d].vehicle == 1):
                (x, y) = main_road2[d-127]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road2.lane[d].vehicle == 2):
                (x, y) = main_road2[d-127]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road3_pic3(self):
        main_road3=[(3, 292), (9.588235294117647, 293.05882352941177), (16.176470588235293, 294.11764705882354), (22.764705882352942, 295.1764705882353), (29.352941176470587, 296.2352941176471), (35.94117647058823, 297.29411764705884), (42.52941176470588, 298.3529411764706), (49.11764705882352, 299.4117647058824), (55.70588235294117, 300.47058823529414), (62.29411764705881, 301.5294117647059), (68.88235294117646, 302.5882352941177), (75.47058823529412, 303.64705882352945), (82.05882352941177, 304.7058823529412), (88.64705882352942, 305.764705882353), (95.23529411764707, 306.82352941176475), (101.82352941176472, 307.8823529411765), (108.41176470588238, 308.9411764705883), (115.00000000000003, 310.00000000000006)]
        for d in range(127,145):
            if (road.main_road3.lane[d].vehicle == 1):
                (x, y) = main_road3[d-127]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road3.lane[d].vehicle == 2):
                (x, y) = main_road3[d-127]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road4_pic3(self):
        main_road4=[(131, 274), (124.85714285714286, 274.2857142857143), (118.71428571428572, 274.57142857142856), (112.57142857142858, 274.85714285714283), (106.42857142857144, 275.1428571428571), (100.2857142857143, 275.4285714285714), (94.14285714285717, 275.71428571428567), (88.00000000000003, 275.99999999999994), (81.375, 275.5), (74.75, 275.0), (68.125, 274.5), (61.5, 274.0), (54.875, 273.5), (48.25, 273.0), (41.625, 272.5), (35.0, 272.0)]
        for d in range(1605,1621):
            if (road.main_road4.lane[d].vehicle == 1):
                (x, y) = main_road4[d-1605]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road4.lane[d].vehicle == 2):
                (x, y) = main_road4[d-1605]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road5_pic3(self):
        main_road5=[(650, 769), (643.8, 765.1333333333333), (637.5999999999999, 761.2666666666667), (631.3999999999999, 757.4), (625.1999999999998, 753.5333333333333), (618.9999999999998, 749.6666666666666), (612.7999999999997, 745.8), (606.5999999999997, 741.9333333333333), (600.3999999999996, 738.0666666666666), (594.1999999999996, 734.1999999999999), (587.9999999999995, 730.3333333333333), (581.7999999999995, 726.4666666666666), (575.5999999999995, 722.5999999999999), (569.3999999999994, 718.7333333333332), (563.1999999999994, 714.8666666666666), (556.9999999999993, 710.9999999999999), (555.15, 700.55), (553.3, 690.0999999999999), (551.4499999999999, 679.6499999999999), (549.5999999999999, 669.1999999999998), (547.7499999999999, 658.7499999999998), (545.8999999999999, 648.2999999999997), (544.0499999999998, 637.8499999999997), (542.1999999999998, 627.3999999999996), (540.3499999999998, 616.9499999999996), (538.4999999999998, 606.4999999999995), (536.6499999999997, 596.0499999999995), (534.7999999999997, 585.5999999999995), (532.9499999999997, 575.1499999999994), (531.0999999999997, 564.6999999999994), (529.2499999999997, 554.2499999999993), (527.3999999999996, 543.7999999999993), (525.5499999999996, 533.3499999999992), (523.6999999999996, 522.8999999999992), (521.8499999999996, 512.4499999999991), (519.9999999999995, 501.99999999999915), (513.2, 491.5), (506.40000000000003, 481.0), (499.6, 470.5), (492.8, 460.0), (486.0, 449.5), (479.2, 439.0), (472.4, 428.5), (465.59999999999997, 418.0), (458.79999999999995, 407.5), (451.99999999999994, 397.0), (445.6923076923077, 386.9230769230769), (439.38461538461536, 376.8461538461538), (433.07692307692304, 366.7692307692307), (426.7692307692307, 356.6923076923076), (420.4615384615384, 346.6153846153845), (414.1538461538461, 336.53846153846143), (407.84615384615375, 326.46153846153834), (401.53846153846143, 316.38461538461524), (395.2307692307691, 306.30769230769215), (388.9230769230768, 296.23076923076906), (382.61538461538447, 286.15384615384596), (376.30769230769215, 276.07692307692287), (369.99999999999983, 265.9999999999998), (365.0, 258.75), (360.0, 251.5), (355.0, 244.25), (350.0, 237.0), (345.0, 229.75), (340.0, 222.5), (335.0, 215.25), (330.0, 208.0), (328.76666666666665, 201.83333333333334), (327.5333333333333, 195.66666666666669), (326.29999999999995, 189.50000000000003), (325.0666666666666, 183.33333333333337), (323.83333333333326, 177.1666666666667), (322.5999999999999, 171.00000000000006), (321.36666666666656, 164.8333333333334), (320.1333333333332, 158.66666666666674), (318.89999999999986, 152.50000000000009), (317.6666666666665, 146.33333333333343), (316.43333333333317, 140.16666666666677), (315.1999999999998, 134.0000000000001), (313.96666666666647, 127.83333333333344), (312.7333333333331, 121.66666666666677), (311.4999999999998, 115.5000000000001), (310.2666666666664, 109.33333333333343), (309.0333333333331, 103.16666666666676), (307.7999999999997, 97.00000000000009), (306.5666666666664, 90.83333333333341), (305.33333333333303, 84.66666666666674), (304.0999999999997, 78.50000000000007), (302.86666666666633, 72.3333333333334), (301.633333333333, 66.16666666666673), (300.39999999999964, 60.000000000000064), (299.1666666666663, 53.8333333333334), (297.93333333333294, 47.666666666666735), (296.6999999999996, 41.50000000000007), (295.46666666666624, 35.33333333333341), (294.2333333333329, 29.16666666666674), (292.99999999999955, 23.00000000000007), (299.1333333333333, 22.8), (305.26666666666665, 22.6), (311.4, 22.400000000000002), (317.5333333333333, 22.200000000000003), (323.66666666666663, 22.000000000000004), (329.79999999999995, 21.800000000000004), (335.9333333333333, 21.600000000000005), (342.0666666666666, 21.400000000000006), (348.19999999999993, 21.200000000000006), (354.33333333333326, 21.000000000000007), (360.4666666666666, 20.800000000000008), (366.5999999999999, 20.60000000000001), (372.73333333333323, 20.40000000000001), (378.86666666666656, 20.20000000000001), (384.9999999999999, 20.00000000000001), (387.0, 24.5), (389.0, 29.0), (386.1, 35.1), (383.20000000000005, 41.2), (380.30000000000007, 47.300000000000004), (377.4000000000001, 53.400000000000006), (374.5000000000001, 59.50000000000001), (371.60000000000014, 65.60000000000001), (368.70000000000016, 71.7), (365.8000000000002, 77.8), (362.9000000000002, 83.89999999999999), (360.0000000000002, 89.99999999999999), (356.5, 98.0), (353.0, 106.0), (349.27777777777777, 112.33333333333333), (345.55555555555554, 118.66666666666666), (341.8333333333333, 124.99999999999999), (338.1111111111111, 131.33333333333331), (334.38888888888886, 137.66666666666666), (330.66666666666663, 144.0), (326.9444444444444, 150.33333333333334), (323.2222222222222, 156.66666666666669), (319.49999999999994, 163.00000000000003), (315.7777777777777, 169.33333333333337), (312.0555555555555, 175.6666666666667), (308.33333333333326, 182.00000000000006), (304.61111111111103, 188.3333333333334), (300.8888888888888, 194.66666666666674), (297.1666666666666, 201.00000000000009), (293.44444444444434, 207.33333333333343), (289.7222222222221, 213.66666666666677), (285.9999999999999, 220.0000000000001), (279.3888888888889, 223.11111111111111), (272.7777777777778, 226.22222222222223), (266.16666666666674, 229.33333333333334), (259.55555555555566, 232.44444444444446), (252.94444444444454, 235.55555555555557), (246.33333333333343, 238.66666666666669), (239.7222222222223, 241.7777777777778), (233.1111111111112, 244.8888888888889), (226.50000000000009, 248.00000000000003), (219.88888888888897, 251.11111111111114), (213.27777777777786, 254.22222222222226), (206.66666666666674, 257.33333333333337), (200.05555555555563, 260.44444444444446), (193.4444444444445, 263.55555555555554), (186.8333333333334, 266.66666666666663), (180.22222222222229, 269.7777777777777), (173.61111111111117, 272.8888888888888), (167.00000000000006, 275.9999999999999), (160.92307692307693, 276.6923076923077), (154.84615384615387, 277.38461538461536), (148.7692307692308, 278.07692307692304), (142.69230769230774, 278.7692307692307), (136.61538461538467, 279.4615384615384), (130.5384615384616, 280.1538461538461), (124.46153846153852, 280.84615384615375), (118.38461538461544, 281.53846153846143), (112.30769230769236, 282.2307692307691), (106.23076923076928, 282.9230769230768), (100.1538461538462, 283.61538461538447), (94.07692307692312, 284.30769230769215), (88.00000000000004, 284.99999999999983), (81.2, 284.0), (74.4, 283.0), (67.60000000000001, 282.0), (60.80000000000001, 281.0), (54.000000000000014, 280.0), (47.20000000000002, 279.0), (40.40000000000002, 278.0), (33.60000000000002, 277.0), (26.800000000000022, 276.0), (20.00000000000002, 275.0)]
        for d in range(1438,1621):
            if (road.main_road5.lane[d].vehicle == 1):
                (x, y) = main_road5[d-1438]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road5.lane[d].vehicle == 2):
                (x, y) = main_road5[d-1438]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road6_pic3(self):
        main_road6=[(645, 772), (638.6666666666666, 768.0666666666667), (632.3333333333333, 764.1333333333334), (625.9999999999999, 760.2000000000002), (619.6666666666665, 756.2666666666669), (613.3333333333331, 752.3333333333336), (606.9999999999998, 748.4000000000003), (600.6666666666664, 744.466666666667), (594.333333333333, 740.5333333333338), (587.9999999999997, 736.6000000000005), (581.6666666666663, 732.6666666666672), (575.3333333333329, 728.7333333333339), (568.9999999999995, 724.8000000000006), (562.6666666666662, 720.8666666666674), (556.3333333333328, 716.9333333333341), (549.9999999999994, 713.0000000000008), (548.2, 702.55), (546.4000000000001, 692.0999999999999), (544.6000000000001, 681.6499999999999), (542.8000000000002, 671.1999999999998), (541.0000000000002, 660.7499999999998), (539.2000000000003, 650.2999999999997), (537.4000000000003, 639.8499999999997), (535.6000000000004, 629.3999999999996), (533.8000000000004, 618.9499999999996), (532.0000000000005, 608.4999999999995), (530.2000000000005, 598.0499999999995), (528.4000000000005, 587.5999999999995), (526.6000000000006, 577.1499999999994), (524.8000000000006, 566.6999999999994), (523.0000000000007, 556.2499999999993), (521.2000000000007, 545.7999999999993), (519.4000000000008, 535.3499999999992), (517.6000000000008, 524.8999999999992), (515.8000000000009, 514.4499999999991), (514.0000000000009, 503.99999999999915), (507.3, 493.5), (500.6, 483.0), (493.90000000000003, 472.5), (487.20000000000005, 462.0), (480.50000000000006, 451.5), (473.80000000000007, 441.0), (467.1000000000001, 430.5), (460.4000000000001, 420.0), (453.7000000000001, 409.5), (447.0000000000001, 399.0), (440.61538461538464, 389.15384615384613), (434.2307692307693, 379.30769230769226), (427.8461538461539, 369.4615384615384), (421.46153846153857, 359.6153846153845), (415.0769230769232, 349.76923076923066), (408.69230769230785, 339.9230769230768), (402.3076923076925, 330.0769230769229), (395.92307692307713, 320.23076923076906), (389.5384615384618, 310.3846153846152), (383.1538461538464, 300.5384615384613), (376.76923076923106, 290.69230769230745), (370.3846153846157, 280.8461538461536), (364.00000000000034, 270.9999999999997), (359.0, 263.5), (354.0, 256.0), (349.0, 248.5), (344.0, 241.0), (339.0, 233.5), (334.0, 226.0), (329.0, 218.5), (324.0, 211.0), (322.76666666666665, 204.6), (321.5333333333333, 198.2), (320.29999999999995, 191.79999999999998), (319.0666666666666, 185.39999999999998), (317.83333333333326, 178.99999999999997), (316.5999999999999, 172.59999999999997), (315.36666666666656, 166.19999999999996), (314.1333333333332, 159.79999999999995), (312.89999999999986, 153.39999999999995), (311.6666666666665, 146.99999999999994), (310.43333333333317, 140.59999999999994), (309.1999999999998, 134.19999999999993), (307.96666666666647, 127.79999999999993), (306.7333333333331, 121.39999999999992), (305.4999999999998, 114.99999999999991), (304.2666666666664, 108.59999999999991), (303.0333333333331, 102.1999999999999), (301.7999999999997, 95.7999999999999), (300.5666666666664, 89.39999999999989), (299.33333333333303, 82.99999999999989), (298.0999999999997, 76.59999999999988), (296.86666666666633, 70.19999999999987), (295.633333333333, 63.799999999999876), (294.39999999999964, 57.39999999999988), (293.1666666666663, 50.99999999999988), (291.93333333333294, 44.59999999999988), (290.6999999999996, 38.19999999999988), (289.46666666666624, 31.799999999999883), (288.2333333333329, 25.399999999999885), (286.99999999999955, 18.999999999999886), (293.6666666666667, 18.8), (300.33333333333337, 18.6), (307.00000000000006, 18.400000000000002), (313.66666666666674, 18.200000000000003), (320.3333333333334, 18.000000000000004), (327.0000000000001, 17.800000000000004), (333.6666666666668, 17.600000000000005), (340.3333333333335, 17.400000000000006), (347.00000000000017, 17.200000000000006), (353.66666666666686, 17.000000000000007), (360.33333333333354, 16.800000000000008), (367.0000000000002, 16.60000000000001), (373.6666666666669, 16.40000000000001), (380.3333333333336, 16.20000000000001), (387.0000000000003, 16.00000000000001), (391.0, 21.0), (395.0, 26.0), (391.7, 33.3), (388.4, 40.599999999999994), (385.09999999999997, 47.89999999999999), (381.79999999999995, 55.19999999999999), (378.49999999999994, 62.499999999999986), (375.19999999999993, 69.79999999999998), (371.8999999999999, 77.09999999999998), (368.5999999999999, 84.39999999999998), (365.2999999999999, 91.69999999999997), (361.9999999999999, 98.99999999999997), (358.0, 105.0), (354.0, 111.0), (350.44444444444446, 117.27777777777777), (346.8888888888889, 123.55555555555554), (343.33333333333337, 129.83333333333331), (339.7777777777778, 136.1111111111111), (336.2222222222223, 142.38888888888886), (332.66666666666674, 148.66666666666663), (329.1111111111112, 154.9444444444444), (325.55555555555566, 161.22222222222217), (322.0000000000001, 167.49999999999994), (318.44444444444457, 173.77777777777771), (314.888888888889, 180.0555555555555), (311.3333333333335, 186.33333333333326), (307.77777777777794, 192.61111111111103), (304.2222222222224, 198.8888888888888), (300.66666666666686, 205.16666666666657), (297.1111111111113, 211.44444444444434), (293.55555555555577, 217.72222222222211), (290.0000000000002, 223.9999999999999), (283.22222222222223, 227.27777777777777), (276.44444444444446, 230.55555555555554), (269.6666666666667, 233.83333333333331), (262.8888888888889, 237.1111111111111), (256.11111111111114, 240.38888888888886), (249.33333333333337, 243.66666666666663), (242.5555555555556, 246.9444444444444), (235.77777777777783, 250.22222222222217), (229.00000000000006, 253.49999999999994), (222.22222222222229, 256.7777777777777), (215.4444444444445, 260.0555555555555), (208.66666666666674, 263.33333333333326), (201.88888888888897, 266.61111111111103), (195.1111111111112, 269.8888888888888), (188.33333333333343, 273.1666666666666), (181.55555555555566, 276.44444444444434), (174.77777777777789, 279.7222222222221), (168.0000000000001, 282.9999999999999), (161.76923076923077, 283.61538461538464), (155.53846153846155, 284.2307692307693), (149.30769230769232, 284.8461538461539), (143.0769230769231, 285.46153846153857), (136.84615384615387, 286.0769230769232), (130.61538461538464, 286.69230769230785), (124.38461538461542, 287.3076923076925), (118.15384615384619, 287.92307692307713), (111.92307692307696, 288.5384615384618), (105.69230769230774, 289.1538461538464), (99.46153846153851, 289.76923076923106), (93.23076923076928, 290.3846153846157), (87.00000000000006, 291.00000000000034), (78.7, 289.8), (70.4, 288.6), (62.10000000000001, 287.40000000000003), (53.80000000000001, 286.20000000000005), (45.500000000000014, 285.00000000000006), (37.20000000000002, 283.80000000000007), (28.900000000000016, 282.6000000000001), (20.600000000000016, 281.4000000000001), (12.300000000000015, 280.2000000000001), (4.000000000000014, 279.0000000000001)]
        for d in range(1438,1621):
            if (road.main_road6.lane[d].vehicle == 1):
                (x, y) = main_road6[d-1438]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road6.lane[d].vehicle == 2):
                (x, y) = main_road6[d-1438]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
                
    def draw_main_road1_pic4(self):
        main_road1=[(364, 3), (366.1578947368421, 12.421052631578947), (368.31578947368416, 21.842105263157894), (370.47368421052624, 31.263157894736842), (372.6315789473683, 40.68421052631579), (374.7894736842104, 50.10526315789473), (376.9473684210525, 59.52631578947368), (379.10526315789457, 68.94736842105263), (381.26315789473665, 78.36842105263158), (383.42105263157873, 87.78947368421052), (385.5789473684208, 97.21052631578947), (387.7368421052629, 106.63157894736841), (389.894736842105, 116.05263157894736), (392.05263157894706, 125.4736842105263), (394.21052631578914, 134.89473684210526), (396.3684210526312, 144.31578947368422), (398.5263157894733, 153.73684210526318), (400.6842105263154, 163.15789473684214), (402.84210526315746, 172.5789473684211), (404.99999999999955, 182.00000000000006), (412.65, 185.0), (420.29999999999995, 188.0), (427.94999999999993, 191.0), (435.5999999999999, 194.0), (443.2499999999999, 197.0), (450.89999999999986, 200.0), (458.54999999999984, 203.0), (466.1999999999998, 206.0), (473.8499999999998, 209.0), (481.4999999999998, 212.0), (489.14999999999975, 215.0), (496.7999999999997, 218.0), (504.4499999999997, 221.0), (512.0999999999997, 224.0), (519.7499999999997, 227.0), (527.3999999999996, 230.0), (535.0499999999996, 233.0), (542.6999999999996, 236.0), (550.3499999999996, 239.0), (557.9999999999995, 242.0), (564.6666666666666, 243.66666666666666), (571.3333333333333, 245.33333333333331), (577.9999999999999, 246.99999999999997), (584.0, 249.0), (590.0, 251.0), (596.0, 253.0), (602.0, 255.0), (608.0, 257.0), (614.0, 259.0), (620.0, 261.0), (626.0, 263.0), (632.0, 265.0), (638.0, 267.0), (644.0, 269.0), (649.6, 271.0), (655.2, 273.0), (660.8000000000001, 275.0), (666.4000000000001, 277.0), (672.0000000000001, 279.0)]
        for d in range(334,393):
            if (road.main_road1.lane[d].vehicle == 1):
                (x, y) = main_road1[d-334]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road1.lane[d].vehicle == 2):
                (x, y) = main_road1[d-334]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
         
    def draw_main_road2_pic4(self):
        main_road2=[(357, 4), (359.10526315789474, 13.526315789473685), (361.2105263157895, 23.05263157894737), (363.3157894736842, 32.578947368421055), (365.42105263157896, 42.10526315789474), (367.5263157894737, 51.631578947368425), (369.63157894736844, 61.15789473684211), (371.7368421052632, 70.6842105263158), (373.8421052631579, 80.21052631578948), (375.94736842105266, 89.73684210526316), (378.0526315789474, 99.26315789473685), (380.15789473684214, 108.78947368421053), (382.2631578947369, 118.31578947368422), (384.3684210526316, 127.8421052631579), (386.47368421052636, 137.3684210526316), (388.5789473684211, 146.89473684210526), (390.68421052631584, 156.42105263157896), (392.7894736842106, 165.94736842105266), (394.8947368421053, 175.47368421052636), (397.00000000000006, 185.00000000000006), (404.95, 188.05), (412.9, 191.10000000000002), (420.84999999999997, 194.15000000000003), (428.79999999999995, 197.20000000000005), (436.74999999999994, 200.25000000000006), (444.69999999999993, 203.30000000000007), (452.6499999999999, 206.35000000000008), (460.5999999999999, 209.4000000000001), (468.5499999999999, 212.4500000000001), (476.4999999999999, 215.5000000000001), (484.4499999999999, 218.55000000000013), (492.39999999999986, 221.60000000000014), (500.34999999999985, 224.65000000000015), (508.29999999999984, 227.70000000000016), (516.2499999999999, 230.75000000000017), (524.1999999999999, 233.80000000000018), (532.15, 236.8500000000002), (540.1, 239.9000000000002), (548.0500000000001, 242.95000000000022), (556.0000000000001, 246.00000000000023), (561.6666666666666, 248.33333333333334), (567.3333333333333, 250.66666666666669), (572.9999999999999, 253.00000000000003), (579.8181818181819, 255.27272727272728), (586.6363636363637, 257.54545454545456), (593.4545454545456, 259.8181818181818), (600.2727272727275, 262.09090909090907), (607.0909090909093, 264.3636363636363), (613.9090909090912, 266.63636363636357), (620.7272727272731, 268.9090909090908), (627.545454545455, 271.1818181818181), (634.3636363636368, 273.4545454545453), (641.1818181818187, 275.7272727272726), (648.0000000000006, 277.99999999999983), (652.4, 279.2), (656.8, 280.4), (661.1999999999999, 281.59999999999997), (665.5999999999999, 282.79999999999995), (669.9999999999999, 283.99999999999994)]
        for d in range(334,393):
            if (road.main_road2.lane[d].vehicle == 1):
                (x, y) = main_road2[d-334]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road2.lane[d].vehicle == 2):
                (x, y) = main_road2[d-334]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road5_pic4(self):
        main_road5=[(672, 262), (665.6666666666666, 260.1333333333333), (659.3333333333333, 258.26666666666665), (652.9999999999999, 256.4), (646.6666666666665, 254.5333333333333), (640.3333333333331, 252.66666666666663), (633.9999999999998, 250.79999999999995), (627.6666666666664, 248.93333333333328), (621.333333333333, 247.0666666666666), (614.9999999999997, 245.19999999999993), (608.6666666666663, 243.33333333333326), (602.3333333333329, 241.46666666666658), (595.9999999999995, 239.5999999999999), (589.6666666666662, 237.73333333333323), (583.3333333333328, 235.86666666666656), (576.9999999999994, 233.9999999999999), (571.0, 232.0), (565.0, 230.0), (559.0, 228.0), (551.95, 225.35), (544.9000000000001, 222.7), (537.8500000000001, 220.04999999999998), (530.8000000000002, 217.39999999999998), (523.7500000000002, 214.74999999999997), (516.7000000000003, 212.09999999999997), (509.65000000000026, 209.44999999999996), (502.60000000000025, 206.79999999999995), (495.55000000000024, 204.14999999999995), (488.5000000000002, 201.49999999999994), (481.4500000000002, 198.84999999999994), (474.4000000000002, 196.19999999999993), (467.3500000000002, 193.54999999999993), (460.3000000000002, 190.89999999999992), (453.25000000000017, 188.24999999999991), (446.20000000000016, 185.5999999999999), (439.15000000000015, 182.9499999999999), (432.10000000000014, 180.2999999999999), (425.0500000000001, 177.6499999999999), (418.0000000000001, 174.9999999999999), (416.1, 166.35), (414.20000000000005, 157.7), (412.30000000000007, 149.04999999999998), (410.4000000000001, 140.39999999999998), (408.5000000000001, 131.74999999999997), (406.60000000000014, 123.09999999999997), (404.70000000000016, 114.44999999999996), (402.8000000000002, 105.79999999999995), (400.9000000000002, 97.14999999999995), (399.0000000000002, 88.49999999999994), (397.10000000000025, 79.84999999999994), (395.2000000000003, 71.19999999999993), (393.3000000000003, 62.54999999999993), (391.4000000000003, 53.899999999999935), (389.50000000000034, 45.249999999999936), (387.60000000000036, 36.59999999999994), (385.7000000000004, 27.94999999999994), (383.8000000000004, 19.29999999999994), (381.90000000000043, 10.64999999999994), (380.00000000000045, 1.9999999999999396)]
        for d in range(1382,1441):
            if (road.main_road5.lane[d].vehicle == 1):
                (x, y) = main_road5[d-1382]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road5.lane[d].vehicle == 2):
                (x, y) = main_road5[d-1382]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road6_pic4(self):
        main_road6=[(671, 267), (664.6, 265.1333333333333), (658.2, 263.26666666666665), (651.8000000000001, 261.4), (645.4000000000001, 259.5333333333333), (639.0000000000001, 257.66666666666663), (632.6000000000001, 255.79999999999995), (626.2000000000002, 253.93333333333328), (619.8000000000002, 252.0666666666666), (613.4000000000002, 250.19999999999993), (607.0000000000002, 248.33333333333326), (600.6000000000003, 246.46666666666658), (594.2000000000003, 244.5999999999999), (587.8000000000003, 242.73333333333323), (581.4000000000003, 240.86666666666656), (575.0000000000003, 238.9999999999999), (569.6666666666666, 237.0), (564.3333333333333, 235.0), (558.9999999999999, 233.0), (551.75, 230.25), (544.5, 227.5), (537.25, 224.75), (530.0, 222.0), (522.75, 219.25), (515.5, 216.5), (508.25, 213.75), (501.0, 211.0), (493.75, 208.25), (486.5, 205.5), (479.25, 202.75), (472.0, 200.0), (464.75, 197.25), (457.5, 194.5), (450.25, 191.75), (443.0, 189.0), (435.75, 186.25), (428.5, 183.5), (421.25, 180.75), (414.0, 178.0), (411.95, 169.2), (409.9, 160.39999999999998), (407.84999999999997, 151.59999999999997), (405.79999999999995, 142.79999999999995), (403.74999999999994, 133.99999999999994), (401.69999999999993, 125.19999999999995), (399.6499999999999, 116.39999999999995), (397.5999999999999, 107.59999999999995), (395.5499999999999, 98.79999999999995), (393.4999999999999, 89.99999999999996), (391.4499999999999, 81.19999999999996), (389.39999999999986, 72.39999999999996), (387.34999999999985, 63.599999999999966), (385.29999999999984, 54.79999999999997), (383.24999999999983, 45.99999999999997), (381.1999999999998, 37.199999999999974), (379.1499999999998, 28.399999999999974), (377.0999999999998, 19.599999999999973), (375.0499999999998, 10.799999999999972), (372.9999999999998, 1.9999999999999716)]
        for d in range(1382,1441):
            if (road.main_road6.lane[d].vehicle == 1):
                (x, y) = main_road6[d-1382]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road6.lane[d].vehicle == 2):
                (x, y) = main_road6[d-1382]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()          
                
         
    def draw_main_road1_pic5(self):
        main_road1=[(1, 191), (6.815789473684211, 192.71052631578948), (12.631578947368421, 194.42105263157896), (18.44736842105263, 196.13157894736844), (24.263157894736842, 197.84210526315792), (30.078947368421055, 199.5526315789474), (35.89473684210527, 201.26315789473688), (41.71052631578948, 202.97368421052636), (47.52631578947369, 204.68421052631584), (53.342105263157904, 206.39473684210532), (59.15789473684212, 208.1052631578948), (64.97368421052633, 209.81578947368428), (70.78947368421053, 211.52631578947376), (76.60526315789474, 213.23684210526324), (82.42105263157895, 214.94736842105272), (88.23684210526315, 216.6578947368422), (94.05263157894736, 218.36842105263167), (99.86842105263156, 220.07894736842115), (105.68421052631577, 221.78947368421063), (111.49999999999997, 223.5000000000001), (117.31578947368418, 225.2105263157896), (123.13157894736838, 226.92105263157907), (128.9473684210526, 228.63157894736855), (134.76315789473682, 230.34210526315803), (140.57894736842104, 232.0526315789475), (146.39473684210526, 233.763157894737), (152.21052631578948, 235.47368421052647), (158.0263157894737, 237.18421052631595), (163.84210526315792, 238.89473684210543), (169.65789473684214, 240.6052631578949), (175.47368421052636, 242.3157894736844), (181.28947368421058, 244.02631578947387), (187.1052631578948, 245.73684210526335), (192.92105263157902, 247.44736842105283), (198.73684210526324, 249.1578947368423), (204.55263157894746, 250.8684210526318), (210.36842105263167, 252.57894736842127), (216.1842105263159, 254.28947368421075), (222.0000000000001, 256.0000000000002), (226.375, 259.625), (230.75, 263.25), (235.125, 266.875), (239.5, 270.5), (243.875, 274.125), (248.25, 277.75), (252.625, 281.375), (257.0, 285.0), (261.0, 294.0), (265.0, 303.0), (267.1764705882353, 309.1764705882353), (269.3529411764706, 315.3529411764706), (271.5294117647059, 321.5294117647059), (273.7058823529412, 327.7058823529412), (275.8823529411765, 333.8823529411765), (278.0588235294118, 340.0588235294118), (280.23529411764713, 346.23529411764713), (282.41176470588243, 352.41176470588243), (284.58823529411774, 358.58823529411774), (286.76470588235304, 364.76470588235304), (288.94117647058835, 370.94117647058835), (291.11764705882365, 377.11764705882365), (293.29411764705895, 383.29411764705895), (295.47058823529426, 389.47058823529426), (297.64705882352956, 395.64705882352956), (299.82352941176487, 401.82352941176487), (302.00000000000017, 408.00000000000017), (306.5, 417.5), (311.0, 427.0), (312.4166666666667, 432.9), (313.83333333333337, 438.79999999999995), (315.25000000000006, 444.69999999999993), (316.66666666666674, 450.5999999999999), (318.0833333333334, 456.4999999999999), (319.5000000000001, 462.39999999999986), (320.9166666666668, 468.29999999999984), (322.3333333333335, 474.1999999999998), (323.75000000000017, 480.0999999999998), (325.16666666666686, 485.9999999999998), (326.58333333333354, 491.89999999999975), (328.0000000000002, 497.7999999999997), (329.4166666666669, 503.6999999999997), (330.8333333333336, 509.5999999999997), (332.2500000000003, 515.4999999999997), (333.66666666666697, 521.3999999999996), (335.08333333333366, 527.2999999999996), (336.50000000000034, 533.1999999999996), (337.916666666667, 539.0999999999996), (339.3333333333337, 544.9999999999995), (340.7500000000004, 550.8999999999995), (342.1666666666671, 556.7999999999995), (343.58333333333377, 562.6999999999995), (345.00000000000045, 568.5999999999995), (346.41666666666714, 574.4999999999994), (347.8333333333338, 580.3999999999994), (349.2500000000005, 586.2999999999994), (350.6666666666672, 592.1999999999994), (352.0833333333339, 598.0999999999993), (353.50000000000057, 603.9999999999993), (354.91666666666725, 609.8999999999993), (356.33333333333394, 615.7999999999993), (357.7500000000006, 621.6999999999992), (359.1666666666673, 627.5999999999992), (360.583333333334, 633.4999999999992), (362.0000000000007, 639.3999999999992), (363.41666666666737, 645.2999999999992), (364.83333333333405, 651.1999999999991), (366.25000000000074, 657.0999999999991), (367.6666666666674, 662.9999999999991), (369.0833333333341, 668.8999999999991), (370.5000000000008, 674.799999999999), (371.9166666666675, 680.699999999999), (373.33333333333417, 686.599999999999), (374.75000000000085, 692.499999999999), (376.16666666666754, 698.399999999999), (377.5833333333342, 704.2999999999989), (379.0000000000009, 710.1999999999989), (380.4166666666676, 716.0999999999989), (381.8333333333343, 721.9999999999989), (383.25000000000097, 727.8999999999988), (384.66666666666765, 733.7999999999988), (386.08333333333434, 739.6999999999988), (387.500000000001, 745.5999999999988), (388.9166666666677, 751.4999999999987), (390.3333333333344, 757.3999999999987), (391.7500000000011, 763.2999999999987), (393.16666666666777, 769.1999999999987), (394.58333333333445, 775.0999999999987), (396.00000000000114, 780.9999999999986)]
        for d in range(389,517):
            if (road.main_road1.lane[d].vehicle == 1):
                (x, y) = main_road1[d-389]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road1.lane[d].vehicle == 2):
                (x, y) = main_road1[d-389]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road2_pic5(self):
        main_road2=[(2, 197), (7.7631578947368425, 198.71052631578948), (13.526315789473685, 200.42105263157896), (19.289473684210527, 202.13157894736844), (25.05263157894737, 203.84210526315792), (30.815789473684212, 205.5526315789474), (36.578947368421055, 207.26315789473688), (42.3421052631579, 208.97368421052636), (48.10526315789474, 210.68421052631584), (53.86842105263158, 212.39473684210532), (59.631578947368425, 214.1052631578948), (65.39473684210526, 215.81578947368428), (71.15789473684211, 217.52631578947376), (76.92105263157896, 219.23684210526324), (82.68421052631581, 220.94736842105272), (88.44736842105266, 222.6578947368422), (94.21052631578951, 224.36842105263167), (99.97368421052636, 226.07894736842115), (105.73684210526321, 227.78947368421063), (111.50000000000006, 229.5000000000001), (117.2631578947369, 231.2105263157896), (123.02631578947376, 232.92105263157907), (128.7894736842106, 234.63157894736855), (134.55263157894746, 236.34210526315803), (140.3157894736843, 238.0526315789475), (146.07894736842115, 239.763157894737), (151.842105263158, 241.47368421052647), (157.60526315789485, 243.18421052631595), (163.3684210526317, 244.89473684210543), (169.13157894736855, 246.6052631578949), (174.8947368421054, 248.3157894736844), (180.65789473684225, 250.02631578947387), (186.4210526315791, 251.73684210526335), (192.18421052631595, 253.44736842105283), (197.9473684210528, 255.1578947368423), (203.71052631578965, 256.8684210526318), (209.4736842105265, 258.57894736842127), (215.23684210526335, 260.28947368421075), (221.0000000000002, 262.0000000000002), (225.0, 265.375), (229.0, 268.75), (233.0, 272.125), (237.0, 275.5), (241.0, 278.875), (245.0, 282.25), (249.0, 285.625), (253.0, 289.0), (257.0, 297.0), (261.0, 305.0), (263.05882352941177, 311.05882352941177), (265.11764705882354, 317.11764705882354), (267.1764705882353, 323.1764705882353), (269.2352941176471, 329.2352941176471), (271.29411764705884, 335.29411764705884), (273.3529411764706, 341.3529411764706), (275.4117647058824, 347.4117647058824), (277.47058823529414, 353.47058823529414), (279.5294117647059, 359.5294117647059), (281.5882352941177, 365.5882352941177), (283.64705882352945, 371.64705882352945), (285.7058823529412, 377.7058823529412), (287.764705882353, 383.764705882353), (289.82352941176475, 389.82352941176475), (291.8823529411765, 395.8823529411765), (293.9411764705883, 401.9411764705883), (296.00000000000006, 408.00000000000006), (300.0, 417.5), (304.0, 427.0), (305.43333333333334, 432.8666666666667), (306.8666666666667, 438.73333333333335), (308.3, 444.6), (309.73333333333335, 450.4666666666667), (311.1666666666667, 456.33333333333337), (312.6, 462.20000000000005), (314.03333333333336, 468.0666666666667), (315.4666666666667, 473.9333333333334), (316.90000000000003, 479.80000000000007), (318.33333333333337, 485.66666666666674), (319.7666666666667, 491.5333333333334), (321.20000000000005, 497.4000000000001), (322.6333333333334, 503.26666666666677), (324.0666666666667, 509.13333333333344), (325.50000000000006, 515.0000000000001), (326.9333333333334, 520.8666666666668), (328.36666666666673, 526.7333333333335), (329.80000000000007, 532.6000000000001), (331.2333333333334, 538.4666666666668), (332.66666666666674, 544.3333333333335), (334.1000000000001, 550.2000000000002), (335.5333333333334, 556.0666666666668), (336.96666666666675, 561.9333333333335), (338.4000000000001, 567.8000000000002), (339.8333333333334, 573.6666666666669), (341.26666666666677, 579.5333333333335), (342.7000000000001, 585.4000000000002), (344.13333333333344, 591.2666666666669), (345.5666666666668, 597.1333333333336), (347.0000000000001, 603.0000000000002), (348.43333333333345, 608.8666666666669), (349.8666666666668, 614.7333333333336), (351.3000000000001, 620.6000000000003), (352.73333333333346, 626.4666666666669), (354.1666666666668, 632.3333333333336), (355.60000000000014, 638.2000000000003), (357.0333333333335, 644.066666666667), (358.4666666666668, 649.9333333333336), (359.90000000000015, 655.8000000000003), (361.3333333333335, 661.666666666667), (362.7666666666668, 667.5333333333336), (364.20000000000016, 673.4000000000003), (365.6333333333335, 679.266666666667), (367.06666666666683, 685.1333333333337), (368.50000000000017, 691.0000000000003), (369.9333333333335, 696.866666666667), (371.36666666666684, 702.7333333333337), (372.8000000000002, 708.6000000000004), (374.2333333333335, 714.466666666667), (375.66666666666686, 720.3333333333337), (377.1000000000002, 726.2000000000004), (378.53333333333353, 732.0666666666671), (379.96666666666687, 737.9333333333337), (381.4000000000002, 743.8000000000004), (382.83333333333354, 749.6666666666671), (384.2666666666669, 755.5333333333338), (385.7000000000002, 761.4000000000004), (387.13333333333355, 767.2666666666671), (388.5666666666669, 773.1333333333338), (390.0000000000002, 779.0000000000005)]
        for d in range(389,517):
            if (road.main_road2.lane[d].vehicle == 1):
                (x, y) = main_road2[d-389]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road2.lane[d].vehicle == 2):
                (x, y) = main_road2[d-389]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road3_pic5(self):
        main_road3=[(1, 205), (6.631578947368421, 206.6315789473684), (12.263157894736842, 208.26315789473682), (17.894736842105264, 209.89473684210523), (23.526315789473685, 211.52631578947364), (29.157894736842106, 213.15789473684205), (34.78947368421053, 214.78947368421046), (40.421052631578945, 216.42105263157887), (46.05263157894737, 218.05263157894728), (51.684210526315795, 219.6842105263157), (57.31578947368422, 221.3157894736841), (62.947368421052644, 222.94736842105252), (68.57894736842107, 224.57894736842093), (74.2105263157895, 226.21052631578934), (79.84210526315792, 227.84210526315775), (85.47368421052634, 229.47368421052616), (91.10526315789477, 231.10526315789457), (96.7368421052632, 232.73684210526298), (102.36842105263162, 234.3684210526314), (108.00000000000004, 235.9999999999998), (113.63157894736847, 237.6315789473682), (119.26315789473689, 239.26315789473662), (124.89473684210532, 240.89473684210503), (130.52631578947373, 242.52631578947344), (136.15789473684214, 244.15789473684185), (141.78947368421055, 245.78947368421026), (147.42105263157896, 247.42105263157868), (153.05263157894737, 249.05263157894709), (158.68421052631578, 250.6842105263155), (164.3157894736842, 252.3157894736839), (169.9473684210526, 253.94736842105232), (175.578947368421, 255.57894736842073), (181.21052631578942, 257.21052631578914), (186.84210526315783, 258.8421052631576), (192.47368421052624, 260.473684210526), (198.10526315789465, 262.10526315789446), (203.73684210526307, 263.7368421052629), (209.36842105263148, 265.36842105263133), (214.9999999999999, 266.9999999999998), (219.25, 270.25), (223.5, 273.5), (227.75, 276.75), (232.0, 280.0), (236.25, 283.25), (240.5, 286.5), (244.75, 289.75), (249.0, 293.0), (252.5, 300.5), (256.0, 308.0), (258.0, 313.94117647058823), (260.0, 319.88235294117646), (262.0, 325.8235294117647), (264.0, 331.7647058823529), (266.0, 337.70588235294116), (268.0, 343.6470588235294), (270.0, 349.5882352941176), (272.0, 355.52941176470586), (274.0, 361.4705882352941), (276.0, 367.4117647058823), (278.0, 373.35294117647055), (280.0, 379.2941176470588), (282.0, 385.235294117647), (284.0, 391.17647058823525), (286.0, 397.1176470588235), (288.0, 403.0588235294117), (290.0, 408.99999999999994), (294.0, 418.5), (298.0, 428.0), (299.3833333333333, 433.85), (300.76666666666665, 439.70000000000005), (302.15, 445.55000000000007), (303.5333333333333, 451.4000000000001), (304.91666666666663, 457.2500000000001), (306.29999999999995, 463.10000000000014), (307.6833333333333, 468.95000000000016), (309.0666666666666, 474.8000000000002), (310.44999999999993, 480.6500000000002), (311.83333333333326, 486.5000000000002), (313.2166666666666, 492.35000000000025), (314.5999999999999, 498.2000000000003), (315.98333333333323, 504.0500000000003), (317.36666666666656, 509.9000000000003), (318.7499999999999, 515.7500000000003), (320.1333333333332, 521.6000000000004), (321.51666666666654, 527.4500000000004), (322.89999999999986, 533.3000000000004), (324.2833333333332, 539.1500000000004), (325.6666666666665, 545.0000000000005), (327.04999999999984, 550.8500000000005), (328.43333333333317, 556.7000000000005), (329.8166666666665, 562.5500000000005), (331.1999999999998, 568.4000000000005), (332.58333333333314, 574.2500000000006), (333.96666666666647, 580.1000000000006), (335.3499999999998, 585.9500000000006), (336.7333333333331, 591.8000000000006), (338.11666666666645, 597.6500000000007), (339.4999999999998, 603.5000000000007), (340.8833333333331, 609.3500000000007), (342.2666666666664, 615.2000000000007), (343.64999999999975, 621.0500000000008), (345.0333333333331, 626.9000000000008), (346.4166666666664, 632.7500000000008), (347.7999999999997, 638.6000000000008), (349.18333333333305, 644.4500000000008), (350.5666666666664, 650.3000000000009), (351.9499999999997, 656.1500000000009), (353.33333333333303, 662.0000000000009), (354.71666666666636, 667.8500000000009), (356.0999999999997, 673.700000000001), (357.483333333333, 679.550000000001), (358.86666666666633, 685.400000000001), (360.24999999999966, 691.250000000001), (361.633333333333, 697.100000000001), (363.0166666666663, 702.9500000000011), (364.39999999999964, 708.8000000000011), (365.78333333333296, 714.6500000000011), (367.1666666666663, 720.5000000000011), (368.5499999999996, 726.3500000000012), (369.93333333333294, 732.2000000000012), (371.31666666666626, 738.0500000000012), (372.6999999999996, 743.9000000000012), (374.0833333333329, 749.7500000000013), (375.46666666666624, 755.6000000000013), (376.84999999999957, 761.4500000000013), (378.2333333333329, 767.3000000000013), (379.6166666666662, 773.1500000000013), (380.99999999999955, 779.0000000000014)]
        for d in range(389,517):
            if (road.main_road3.lane[d].vehicle == 1):
                (x, y) = main_road3[d-389]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road3.lane[d].vehicle == 2):
                (x, y) = main_road3[d-389]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road4_pic5(self):
        main_road4=[(411, 781), (410.14285714285717, 773.2857142857143), (409.28571428571433, 765.5714285714287), (408.4285714285715, 757.857142857143), (407.57142857142867, 750.1428571428573), (406.71428571428584, 742.4285714285717), (405.857142857143, 734.714285714286), (405.00000000000017, 727.0000000000003), (403.8139534883721, 720.1627906976744), (402.62790697674416, 713.3255813953488), (401.44186046511624, 706.4883720930231), (400.2558139534883, 699.6511627906975), (399.0697674418604, 692.8139534883719), (397.88372093023247, 685.9767441860463), (396.69767441860455, 679.1395348837207), (395.5116279069766, 672.302325581395), (394.3255813953487, 665.4651162790694), (393.1395348837208, 658.6279069767438), (391.95348837209286, 651.7906976744182), (390.76744186046494, 644.9534883720926), (389.581395348837, 638.116279069767), (388.3953488372091, 631.2790697674413), (387.2093023255812, 624.4418604651157), (386.02325581395326, 617.6046511627901), (384.83720930232533, 610.7674418604645), (383.6511627906974, 603.9302325581389), (382.4651162790695, 597.0930232558133), (381.27906976744157, 590.2558139534876), (380.09302325581365, 583.418604651162), (378.9069767441857, 576.5813953488364), (377.7209302325578, 569.7441860465108), (376.5348837209299, 562.9069767441852), (375.34883720930196, 556.0697674418595), (374.16279069767404, 549.2325581395339), (372.9767441860461, 542.3953488372083), (371.7906976744182, 535.5581395348827), (370.6046511627903, 528.7209302325571), (369.41860465116235, 521.8837209302314), (368.23255813953443, 515.0465116279058), (367.0465116279065, 508.20930232558027), (365.8604651162786, 501.3720930232547), (364.67441860465067, 494.53488372092914), (363.48837209302275, 487.6976744186036), (362.3023255813948, 480.860465116278), (361.1162790697669, 474.02325581395246), (359.930232558139, 467.1860465116269), (358.74418604651106, 460.34883720930134), (357.55813953488314, 453.5116279069758), (356.3720930232552, 446.6744186046502), (355.1860465116273, 439.83720930232465), (353.9999999999994, 432.9999999999991), (358.0, 426.5), (362.0, 420.0), (366.29411764705884, 414.94117647058823), (370.5882352941177, 409.88235294117646), (374.8823529411765, 404.8235294117647), (379.17647058823536, 399.7647058823529), (383.4705882352942, 394.70588235294116), (387.76470588235304, 389.6470588235294), (392.0588235294119, 384.5882352941176), (396.3529411764707, 379.52941176470586), (400.64705882352956, 374.4705882352941), (404.9411764705884, 369.4117647058823), (409.23529411764724, 364.35294117647055), (413.5294117647061, 359.2941176470588), (417.8235294117649, 354.235294117647), (422.11764705882376, 349.17647058823525), (426.4117647058826, 344.1176470588235), (430.70588235294144, 339.0588235294117), (435.0000000000003, 333.99999999999994), (427.0, 324.5), (419.0, 315.0), (411.9111111111111, 312.31111111111113), (404.8222222222222, 309.62222222222226), (397.7333333333333, 306.9333333333334), (390.6444444444444, 304.2444444444445), (383.5555555555555, 301.55555555555566), (376.4666666666666, 298.8666666666668), (369.3777777777777, 296.1777777777779), (362.2888888888888, 293.48888888888905), (355.1999999999999, 290.8000000000002), (348.111111111111, 288.1111111111113), (341.02222222222207, 285.42222222222244), (333.93333333333317, 282.7333333333336), (326.84444444444426, 280.0444444444447), (319.75555555555536, 277.35555555555584), (312.66666666666646, 274.66666666666697), (305.57777777777756, 271.9777777777781), (298.48888888888865, 269.28888888888923), (291.39999999999975, 266.60000000000036), (284.31111111111085, 263.9111111111115), (277.22222222222194, 261.2222222222226), (270.13333333333304, 258.53333333333376), (263.04444444444414, 255.84444444444486), (255.95555555555524, 253.15555555555596), (248.86666666666633, 250.46666666666707), (241.77777777777743, 247.77777777777817), (234.68888888888853, 245.08888888888927), (227.59999999999962, 242.40000000000038), (220.51111111111072, 239.71111111111148), (213.42222222222182, 237.02222222222258), (206.33333333333292, 234.33333333333368), (199.244444444444, 231.6444444444448), (192.1555555555551, 228.9555555555559), (185.0666666666662, 226.266666666667), (177.9777777777773, 223.5777777777781), (170.8888888888884, 220.8888888888892), (163.7999999999995, 218.2000000000003), (156.7111111111106, 215.5111111111114), (149.6222222222217, 212.8222222222225), (142.5333333333328, 210.1333333333336), (135.4444444444439, 207.4444444444447), (128.355555555555, 204.75555555555582), (121.2666666666661, 202.06666666666692), (114.17777777777721, 199.37777777777802), (107.08888888888832, 196.68888888888912), (99.99999999999943, 194.00000000000023), (93.53333333333333, 192.6), (87.06666666666666, 191.2), (80.6, 189.79999999999998), (74.13333333333333, 188.39999999999998), (67.66666666666666, 186.99999999999997), (61.19999999999999, 185.59999999999997), (54.73333333333332, 184.19999999999996), (48.26666666666665, 182.79999999999995), (41.79999999999998, 181.39999999999995), (35.333333333333314, 179.99999999999994), (28.866666666666646, 178.59999999999994), (22.399999999999977, 177.19999999999993), (15.93333333333331, 175.79999999999993), (9.466666666666644, 174.39999999999992), (2.999999999999977, 172.99999999999991)]
        for d in range(1260,1392):
            if (road.main_road4.lane[d].vehicle == 1):
                (x, y) = main_road4[d-1260]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road4.lane[d].vehicle == 2):
                (x, y) = main_road4[d-1260]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road5_pic5(self):
        main_road5=[(405, 781), (404.2857142857143, 773.5714285714286), (403.57142857142856, 766.1428571428571), (402.85714285714283, 758.7142857142857), (402.1428571428571, 751.2857142857142), (401.4285714285714, 743.8571428571428), (400.71428571428567, 736.4285714285713), (399.99999999999994, 728.9999999999999), (398.7906976744186, 722.1162790697674), (397.5813953488372, 715.2325581395348), (396.3720930232558, 708.3488372093022), (395.1627906976744, 701.4651162790697), (393.953488372093, 694.5813953488371), (392.7441860465116, 687.6976744186045), (391.53488372093017, 680.8139534883719), (390.32558139534876, 673.9302325581393), (389.11627906976736, 667.0465116279067), (387.90697674418595, 660.1627906976742), (386.69767441860455, 653.2790697674416), (385.48837209302314, 646.395348837209), (384.27906976744174, 639.5116279069764), (383.06976744186034, 632.6279069767438), (381.86046511627893, 625.7441860465112), (380.6511627906975, 618.8604651162786), (379.4418604651161, 611.9767441860461), (378.2325581395347, 605.0930232558135), (377.0232558139533, 598.2093023255809), (375.8139534883719, 591.3255813953483), (374.6046511627905, 584.4418604651157), (373.3953488372091, 577.5581395348831), (372.1860465116277, 570.6744186046506), (370.9767441860463, 563.790697674418), (369.7674418604649, 556.9069767441854), (368.5581395348835, 550.0232558139528), (367.3488372093021, 543.1395348837202), (366.13953488372067, 536.2558139534876), (364.93023255813927, 529.372093023255), (363.72093023255786, 522.4883720930225), (362.51162790697646, 515.6046511627899), (361.30232558139505, 508.7209302325573), (360.09302325581365, 501.8372093023247), (358.88372093023224, 494.9534883720921), (357.67441860465084, 488.06976744185954), (356.46511627906943, 481.18604651162696), (355.25581395348803, 474.30232558139437), (354.0465116279066, 467.4186046511618), (352.8372093023252, 460.5348837209292), (351.6279069767438, 453.6511627906966), (350.4186046511624, 446.76744186046403), (349.209302325581, 439.88372093023145), (347.9999999999996, 432.99999999999886), (352.5, 425.5), (357.0, 418.0), (361.1764705882353, 413.11764705882354), (365.3529411764706, 408.2352941176471), (369.5294117647059, 403.3529411764706), (373.7058823529412, 398.47058823529414), (377.8823529411765, 393.5882352941177), (382.0588235294118, 388.7058823529412), (386.23529411764713, 383.82352941176475), (390.41176470588243, 378.9411764705883), (394.58823529411774, 374.0588235294118), (398.76470588235304, 369.17647058823536), (402.94117647058835, 364.2941176470589), (407.11764705882365, 359.41176470588243), (411.29411764705895, 354.52941176470597), (415.47058823529426, 349.6470588235295), (419.64705882352956, 344.76470588235304), (423.82352941176487, 339.8823529411766), (428.00000000000017, 335.0000000000001), (421.5, 326.5), (415.0, 318.0), (407.93333333333334, 315.4), (400.8666666666667, 312.79999999999995), (393.8, 310.19999999999993), (386.73333333333335, 307.5999999999999), (379.6666666666667, 304.9999999999999), (372.6, 302.39999999999986), (365.53333333333336, 299.79999999999984), (358.4666666666667, 297.1999999999998), (351.40000000000003, 294.5999999999998), (344.33333333333337, 291.9999999999998), (337.2666666666667, 289.39999999999975), (330.20000000000005, 286.7999999999997), (323.1333333333334, 284.1999999999997), (316.0666666666667, 281.5999999999997), (309.00000000000006, 278.99999999999966), (301.9333333333334, 276.39999999999964), (294.86666666666673, 273.7999999999996), (287.80000000000007, 271.1999999999996), (280.7333333333334, 268.59999999999957), (273.66666666666674, 265.99999999999955), (266.6000000000001, 263.3999999999995), (259.5333333333334, 260.7999999999995), (252.46666666666675, 258.1999999999995), (245.4000000000001, 255.59999999999948), (238.33333333333343, 252.9999999999995), (231.26666666666677, 250.3999999999995), (224.2000000000001, 247.7999999999995), (217.13333333333344, 245.1999999999995), (210.06666666666678, 242.5999999999995), (203.0000000000001, 239.99999999999952), (195.93333333333345, 237.39999999999952), (188.8666666666668, 234.79999999999953), (181.80000000000013, 232.19999999999953), (174.73333333333346, 229.59999999999954), (167.6666666666668, 226.99999999999955), (160.60000000000014, 224.39999999999955), (153.53333333333347, 221.79999999999956), (146.4666666666668, 219.19999999999956), (139.40000000000015, 216.59999999999957), (132.33333333333348, 213.99999999999957), (125.26666666666682, 211.39999999999958), (118.20000000000016, 208.79999999999959), (111.1333333333335, 206.1999999999996), (104.06666666666683, 203.5999999999996), (97.00000000000017, 200.9999999999996), (90.66666666666667, 199.46666666666667), (84.33333333333334, 197.93333333333334), (78.00000000000001, 196.4), (71.66666666666669, 194.86666666666667), (65.33333333333336, 193.33333333333334), (59.00000000000002, 191.8), (52.666666666666686, 190.26666666666668), (46.33333333333335, 188.73333333333335), (40.000000000000014, 187.20000000000002), (33.66666666666668, 185.66666666666669), (27.333333333333346, 184.13333333333335), (21.000000000000014, 182.60000000000002), (14.666666666666682, 181.0666666666667), (8.33333333333335, 179.53333333333336), (2.000000000000017, 178.00000000000003)]
        for d in range(1260,1392):
            if (road.main_road5.lane[d].vehicle == 1):
                (x, y) = main_road5[d-1260]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road5.lane[d].vehicle == 2):
                (x, y) = main_road5[d-1260]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road6_pic5(self):
        main_road6=[(400, 781), (399.2857142857143, 773.7142857142857), (398.57142857142856, 766.4285714285713), (397.85714285714283, 759.142857142857), (397.1428571428571, 751.8571428571427), (396.4285714285714, 744.5714285714283), (395.71428571428567, 737.285714285714), (394.99999999999994, 729.9999999999997), (393.7674418604651, 723.0930232558139), (392.5348837209302, 716.1860465116279), (391.30232558139534, 709.2790697674418), (390.06976744186045, 702.3720930232557), (388.83720930232556, 695.4651162790697), (387.6046511627907, 688.5581395348836), (386.3720930232558, 681.6511627906975), (385.1395348837209, 674.7441860465115), (383.906976744186, 667.8372093023254), (382.6744186046511, 660.9302325581393), (381.44186046511624, 654.0232558139533), (380.20930232558135, 647.1162790697672), (378.97674418604646, 640.2093023255811), (377.7441860465116, 633.302325581395), (376.5116279069767, 626.395348837209), (375.2790697674418, 619.4883720930229), (374.0465116279069, 612.5813953488368), (372.813953488372, 605.6744186046508), (371.58139534883713, 598.7674418604647), (370.34883720930225, 591.8604651162786), (369.11627906976736, 584.9534883720926), (367.88372093023247, 578.0465116279065), (366.6511627906976, 571.1395348837204), (365.4186046511627, 564.2325581395344), (364.1860465116278, 557.3255813953483), (362.9534883720929, 550.4186046511622), (361.72093023255803, 543.5116279069762), (360.48837209302314, 536.6046511627901), (359.25581395348826, 529.697674418604), (358.02325581395337, 522.790697674418), (356.7906976744185, 515.8837209302319), (355.5581395348836, 508.97674418604583), (354.3255813953487, 502.06976744185977), (353.0930232558138, 495.1627906976737), (351.86046511627893, 488.25581395348763), (350.62790697674404, 481.34883720930156), (349.39534883720916, 474.4418604651155), (348.16279069767427, 467.53488372092943), (346.9302325581394, 460.62790697674336), (345.6976744186045, 453.7209302325573), (344.4651162790696, 446.8139534883712), (343.2325581395347, 439.90697674418516), (341.99999999999983, 432.9999999999991), (346.5, 424.5), (351.0, 416.0), (355.11764705882354, 411.29411764705884), (359.2352941176471, 406.5882352941177), (363.3529411764706, 401.8823529411765), (367.47058823529414, 397.17647058823536), (371.5882352941177, 392.4705882352942), (375.7058823529412, 387.76470588235304), (379.82352941176475, 383.0588235294119), (383.9411764705883, 378.3529411764707), (388.0588235294118, 373.64705882352956), (392.17647058823536, 368.9411764705884), (396.2941176470589, 364.23529411764724), (400.41176470588243, 359.5294117647061), (404.52941176470597, 354.8235294117649), (408.6470588235295, 350.11764705882376), (412.76470588235304, 345.4117647058826), (416.8823529411766, 340.70588235294144), (421.0000000000001, 336.0000000000003), (416.0, 328.5), (411.0, 321.0), (403.9555555555556, 318.44444444444446), (396.91111111111115, 315.8888888888889), (389.86666666666673, 313.33333333333337), (382.8222222222223, 310.7777777777778), (375.7777777777779, 308.2222222222223), (368.73333333333346, 305.66666666666674), (361.68888888888904, 303.1111111111112), (354.6444444444446, 300.55555555555566), (347.6000000000002, 298.0000000000001), (340.55555555555577, 295.44444444444457), (333.51111111111135, 292.888888888889), (326.4666666666669, 290.3333333333335), (319.4222222222225, 287.77777777777794), (312.3777777777781, 285.2222222222224), (305.33333333333366, 282.66666666666686), (298.28888888888923, 280.1111111111113), (291.2444444444448, 277.55555555555577), (284.2000000000004, 275.0000000000002), (277.15555555555596, 272.4444444444447), (270.11111111111154, 269.88888888888914), (263.0666666666671, 267.3333333333336), (256.0222222222227, 264.77777777777806), (248.97777777777824, 262.2222222222225), (241.9333333333338, 259.66666666666697), (234.88888888888934, 257.1111111111114), (227.8444444444449, 254.55555555555588), (220.80000000000044, 252.00000000000034), (213.755555555556, 249.4444444444448), (206.71111111111153, 246.88888888888926), (199.66666666666708, 244.3333333333337), (192.62222222222263, 241.77777777777817), (185.57777777777818, 239.22222222222263), (178.53333333333373, 236.66666666666708), (171.48888888888928, 234.11111111111154), (164.44444444444483, 231.555555555556), (157.40000000000038, 229.00000000000045), (150.35555555555592, 226.4444444444449), (143.31111111111147, 223.88888888888937), (136.26666666666702, 221.33333333333383), (129.22222222222257, 218.77777777777828), (122.17777777777812, 216.22222222222274), (115.13333333333367, 213.6666666666672), (108.08888888888922, 211.11111111111165), (101.04444444444476, 208.5555555555561), (94.00000000000031, 206.00000000000057), (87.8, 204.53333333333333), (81.6, 203.06666666666666), (75.39999999999999, 201.6), (69.19999999999999, 200.13333333333333), (62.999999999999986, 198.66666666666666), (56.79999999999998, 197.2), (50.59999999999998, 195.73333333333332), (44.39999999999998, 194.26666666666665), (38.199999999999974, 192.79999999999998), (31.999999999999975, 191.33333333333331), (25.799999999999976, 189.86666666666665), (19.599999999999977, 188.39999999999998), (13.399999999999977, 186.9333333333333), (7.199999999999977, 185.46666666666664), (0.9999999999999769, 183.99999999999997)]
        for d in range(1260,1392):
            if (road.main_road6.lane[d].vehicle == 1):
                (x, y) = main_road6[d-1260]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road6.lane[d].vehicle == 2):
                (x, y) = main_road6[d-1260]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
     
    def draw_main_road1_pic8(self):
        main_road1 = [(0, 59), (6.05, 61.1), (12.1, 63.2), (18.15, 65.3), (24.2, 67.39999999999999), (30.25, 69.49999999999999), (36.3, 71.59999999999998), (42.349999999999994, 73.69999999999997), (48.39999999999999, 75.79999999999997), (54.44999999999999, 77.89999999999996), (60.499999999999986, 79.99999999999996), (66.54999999999998, 82.09999999999995), (72.59999999999998, 84.19999999999995), (78.64999999999998, 86.29999999999994), (84.69999999999997, 88.39999999999993), (90.74999999999997, 90.49999999999993), (96.79999999999997, 92.59999999999992), (102.84999999999997, 94.69999999999992), (108.89999999999996, 96.79999999999991), (114.94999999999996, 98.8999999999999), (120.99999999999996, 100.9999999999999), (125.52631578947368, 103.94736842105263), (130.05263157894737, 106.89473684210526), (134.57894736842104, 109.84210526315789), (139.1052631578947, 112.78947368421052), (143.63157894736838, 115.73684210526315), (148.15789473684205, 118.68421052631578), (152.68421052631572, 121.63157894736841), (157.2105263157894, 124.57894736842104), (161.73684210526307, 127.52631578947367), (166.26315789473674, 130.4736842105263), (170.7894736842104, 133.42105263157893), (175.31578947368408, 136.36842105263156), (179.84210526315775, 139.3157894736842), (184.36842105263142, 142.26315789473682), (188.8947368421051, 145.21052631578945), (193.42105263157876, 148.15789473684208), (197.94736842105243, 151.1052631578947), (202.4736842105261, 154.05263157894734), (206.99999999999977, 156.99999999999997), (214.55, 165.1), (222.10000000000002, 173.2), (229.65000000000003, 181.29999999999998), (237.20000000000005, 189.39999999999998), (244.75000000000006, 197.49999999999997), (252.30000000000007, 205.59999999999997), (259.8500000000001, 213.69999999999996), (267.4000000000001, 221.79999999999995), (274.9500000000001, 229.89999999999995), (282.5000000000001, 237.99999999999994), (290.0500000000001, 246.09999999999994), (297.60000000000014, 254.19999999999993), (305.15000000000015, 262.29999999999995), (312.70000000000016, 270.4), (320.25000000000017, 278.5), (327.8000000000002, 286.6), (335.3500000000002, 294.70000000000005), (342.9000000000002, 302.80000000000007), (350.4500000000002, 310.9000000000001), (358.0000000000002, 319.0000000000001), (365.55000000000024, 327.10000000000014), (373.10000000000025, 335.20000000000016), (380.65000000000026, 343.3000000000002), (388.2000000000003, 351.4000000000002), (395.7500000000003, 359.5000000000002), (403.3000000000003, 367.60000000000025), (410.8500000000003, 375.7000000000003), (418.4000000000003, 383.8000000000003), (425.95000000000033, 391.9000000000003), (433.50000000000034, 400.00000000000034), (441.05000000000035, 408.10000000000036), (448.60000000000036, 416.2000000000004), (456.1500000000004, 424.3000000000004), (463.7000000000004, 432.40000000000043), (471.2500000000004, 440.50000000000045), (478.8000000000004, 448.6000000000005), (486.3500000000004, 456.7000000000005), (493.90000000000043, 464.8000000000005), (501.45000000000044, 472.90000000000055), (509.00000000000045, 481.00000000000057), (507.7, 485.0), (506.4, 489.0), (505.09999999999997, 493.0), (503.79999999999995, 497.0), (502.49999999999994, 501.0), (501.19999999999993, 505.0), (499.8999999999999, 509.0), (498.5999999999999, 513.0), (497.2999999999999, 517.0), (495.9999999999999, 521.0), (489.74545454545455, 524.2727272727273), (483.4909090909091, 527.5454545454545), (477.23636363636365, 530.8181818181818), (470.9818181818182, 534.090909090909), (464.72727272727275, 537.3636363636363), (458.4727272727273, 540.6363636363635), (452.21818181818185, 543.9090909090908), (445.9636363636364, 547.181818181818), (439.70909090909095, 550.4545454545453), (433.4545454545455, 553.7272727272725), (427.20000000000005, 556.9999999999998), (420.9454545454546, 560.272727272727), (414.69090909090914, 563.5454545454543), (408.4363636363637, 566.8181818181815), (402.18181818181824, 570.0909090909088), (395.9272727272728, 573.363636363636), (389.67272727272734, 576.6363636363633), (383.4181818181819, 579.9090909090905), (377.16363636363644, 583.1818181818178), (370.909090909091, 586.454545454545), (364.65454545454554, 589.7272727272723), (358.4000000000001, 592.9999999999995), (352.14545454545464, 596.2727272727268), (345.8909090909092, 599.545454545454), (339.63636363636374, 602.8181818181813), (333.3818181818183, 606.0909090909086), (327.12727272727284, 609.3636363636358), (320.8727272727274, 612.6363636363631), (314.61818181818194, 615.9090909090903), (308.3636363636365, 619.1818181818176), (302.10909090909104, 622.4545454545448), (295.8545454545456, 625.7272727272721), (289.60000000000014, 628.9999999999993), (283.3454545454547, 632.2727272727266), (277.09090909090924, 635.5454545454538), (270.8363636363638, 638.8181818181811), (264.58181818181833, 642.0909090909083), (258.3272727272729, 645.3636363636356), (252.07272727272743, 648.6363636363628), (245.81818181818198, 651.9090909090901), (239.56363636363653, 655.1818181818173), (233.30909090909108, 658.4545454545446), (227.05454545454563, 661.7272727272718), (220.80000000000018, 664.9999999999991), (214.54545454545473, 668.2727272727263), (208.29090909090928, 671.5454545454536), (202.03636363636383, 674.8181818181808), (195.78181818181838, 678.0909090909081), (189.52727272727293, 681.3636363636354), (183.27272727272748, 684.6363636363626), (177.01818181818203, 687.9090909090899), (170.76363636363658, 691.1818181818171), (164.50909090909113, 694.4545454545444), (158.25454545454568, 697.7272727272716), (152.00000000000023, 700.9999999999989), (144.55, 703.15), (137.10000000000002, 705.3), (129.65000000000003, 707.4499999999999), (122.20000000000003, 709.5999999999999), (114.75000000000003, 711.7499999999999), (107.30000000000003, 713.8999999999999), (99.85000000000002, 716.0499999999998), (92.40000000000002, 718.1999999999998), (84.95000000000002, 720.3499999999998), (77.50000000000001, 722.4999999999998), (70.05000000000001, 724.6499999999997), (62.60000000000001, 726.7999999999997), (55.150000000000006, 728.9499999999997), (47.7, 731.0999999999997), (40.25, 733.2499999999997), (32.8, 735.3999999999996), (25.349999999999998, 737.5499999999996), (17.9, 739.6999999999996), (10.45, 741.8499999999996), (2.999999999999999, 743.9999999999995)]
        for d in range(710,875):
            if (road.main_road1.lane[d].vehicle == 1):
                (x, y) = main_road1[d-710]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road1.lane[d].vehicle == 2):
                (x, y) = main_road1[d-710]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road2_pic8(self):
        main_road2 = [(2, 50), (8.25, 52.2), (14.5, 54.400000000000006), (20.75, 56.60000000000001), (27.0, 58.80000000000001), (33.25, 61.000000000000014), (39.5, 63.20000000000002), (45.75, 65.40000000000002), (52.0, 67.60000000000002), (58.25, 69.80000000000003), (64.5, 72.00000000000003), (70.75, 74.20000000000003), (77.0, 76.40000000000003), (83.25, 78.60000000000004), (89.5, 80.80000000000004), (95.75, 83.00000000000004), (102.0, 85.20000000000005), (108.25, 87.40000000000005), (114.5, 89.60000000000005), (120.75, 91.80000000000005), (127.0, 94.00000000000006), (131.26315789473685, 96.89473684210526), (135.5263157894737, 99.78947368421052), (139.78947368421055, 102.68421052631578), (144.0526315789474, 105.57894736842104), (148.31578947368425, 108.4736842105263), (152.5789473684211, 111.36842105263156), (156.84210526315795, 114.26315789473682), (161.1052631578948, 117.15789473684208), (165.36842105263165, 120.05263157894734), (169.6315789473685, 122.9473684210526), (173.89473684210535, 125.84210526315786), (178.1578947368422, 128.73684210526312), (182.42105263157904, 131.63157894736838), (186.6842105263159, 134.52631578947364), (190.94736842105274, 137.4210526315789), (195.2105263157896, 140.31578947368416), (199.47368421052644, 143.21052631578942), (203.7368421052633, 146.10526315789468), (208.00000000000014, 148.99999999999994), (215.625, 157.0), (223.25, 165.0), (230.875, 173.0), (238.5, 181.0), (246.125, 189.0), (253.75, 197.0), (261.375, 205.0), (269.0, 213.0), (276.625, 221.0), (284.25, 229.0), (291.875, 237.0), (299.5, 245.0), (307.125, 253.0), (314.75, 261.0), (322.375, 269.0), (330.0, 277.0), (337.625, 285.0), (345.25, 293.0), (352.875, 301.0), (360.5, 309.0), (368.125, 317.0), (375.75, 325.0), (383.375, 333.0), (391.0, 341.0), (398.625, 349.0), (406.25, 357.0), (413.875, 365.0), (421.5, 373.0), (429.125, 381.0), (436.75, 389.0), (444.375, 397.0), (452.0, 405.0), (459.625, 413.0), (467.25, 421.0), (474.875, 429.0), (482.5, 437.0), (490.125, 445.0), (497.75, 453.0), (505.375, 461.0), (513.0, 469.0), (513.1, 473.2), (513.2, 477.4), (513.3000000000001, 481.59999999999997), (513.4000000000001, 485.79999999999995), (513.5000000000001, 489.99999999999994), (513.6000000000001, 494.19999999999993), (513.7000000000002, 498.3999999999999), (513.8000000000002, 502.5999999999999), (513.9000000000002, 506.7999999999999), (514.0000000000002, 510.9999999999999), (507.3272727272727, 514.6), (500.6545454545454, 518.2), (493.98181818181814, 521.8000000000001), (487.30909090909086, 525.4000000000001), (480.63636363636357, 529.0000000000001), (473.9636363636363, 532.6000000000001), (467.290909090909, 536.2000000000002), (460.6181818181817, 539.8000000000002), (453.9454545454544, 543.4000000000002), (447.27272727272714, 547.0000000000002), (440.59999999999985, 550.6000000000003), (433.92727272727257, 554.2000000000003), (427.2545454545453, 557.8000000000003), (420.581818181818, 561.4000000000003), (413.9090909090907, 565.0000000000003), (407.2363636363634, 568.6000000000004), (400.56363636363614, 572.2000000000004), (393.89090909090885, 575.8000000000004), (387.21818181818156, 579.4000000000004), (380.5454545454543, 583.0000000000005), (373.872727272727, 586.6000000000005), (367.1999999999997, 590.2000000000005), (360.5272727272724, 593.8000000000005), (353.85454545454513, 597.4000000000005), (347.18181818181785, 601.0000000000006), (340.50909090909056, 604.6000000000006), (333.8363636363633, 608.2000000000006), (327.163636363636, 611.8000000000006), (320.4909090909087, 615.4000000000007), (313.8181818181814, 619.0000000000007), (307.14545454545413, 622.6000000000007), (300.47272727272684, 626.2000000000007), (293.79999999999956, 629.8000000000008), (287.12727272727227, 633.4000000000008), (280.454545454545, 637.0000000000008), (273.7818181818177, 640.6000000000008), (267.1090909090904, 644.2000000000008), (260.4363636363631, 647.8000000000009), (253.76363636363584, 651.4000000000009), (247.09090909090855, 655.0000000000009), (240.41818181818127, 658.6000000000009), (233.74545454545398, 662.200000000001), (227.0727272727267, 665.800000000001), (220.3999999999994, 669.400000000001), (213.72727272727212, 673.000000000001), (207.05454545454484, 676.600000000001), (200.38181818181755, 680.2000000000011), (193.70909090909026, 683.8000000000011), (187.03636363636298, 687.4000000000011), (180.3636363636357, 691.0000000000011), (173.6909090909084, 694.6000000000012), (167.01818181818112, 698.2000000000012), (160.34545454545383, 701.8000000000012), (153.67272727272655, 705.4000000000012), (146.99999999999926, 709.0000000000013), (139.8, 711.0), (132.60000000000002, 713.0), (125.40000000000002, 715.0), (118.20000000000002, 717.0), (111.00000000000001, 719.0), (103.80000000000001, 721.0), (96.60000000000001, 723.0), (89.4, 725.0), (82.2, 727.0), (75.0, 729.0), (67.8, 731.0), (60.599999999999994, 733.0), (53.39999999999999, 735.0), (46.19999999999999, 737.0), (38.999999999999986, 739.0), (31.799999999999986, 741.0), (24.599999999999987, 743.0), (17.399999999999988, 745.0), (10.199999999999989, 747.0), (2.9999999999999885, 749.0)]
        for d in range(710,875):
            if (road.main_road2.lane[d].vehicle == 1):
                (x, y) = main_road2[d-710]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road2.lane[d].vehicle == 2):
                (x, y) = main_road2[d-710]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                              
    def draw_main_road5_pic8(self):
        main_road5 = [(40, 779), (43.5, 776.45), (47.0, 773.9000000000001), (50.5, 771.3500000000001), (54.0, 768.8000000000002), (57.5, 766.2500000000002), (61.0, 763.7000000000003), (64.5, 761.1500000000003), (68.0, 758.6000000000004), (71.5, 756.0500000000004), (75.0, 753.5000000000005), (78.5, 750.9500000000005), (82.0, 748.4000000000005), (85.5, 745.8500000000006), (89.0, 743.3000000000006), (92.5, 740.7500000000007), (96.0, 738.2000000000007), (99.5, 735.6500000000008), (103.0, 733.1000000000008), (106.5, 730.5500000000009), (110.0, 728.0000000000009), (118.18181818181819, 724.1272727272727), (126.36363636363637, 720.2545454545455), (134.54545454545456, 716.3818181818182), (142.72727272727275, 712.5090909090909), (150.90909090909093, 708.6363636363636), (159.09090909090912, 704.7636363636364), (167.2727272727273, 700.8909090909091), (175.4545454545455, 697.0181818181818), (183.63636363636368, 693.1454545454545), (191.81818181818187, 689.2727272727273), (200.00000000000006, 685.4), (208.18181818181824, 681.5272727272727), (216.36363636363643, 677.6545454545454), (224.54545454545462, 673.7818181818182), (232.7272727272728, 669.9090909090909), (240.909090909091, 666.0363636363636), (249.09090909090918, 662.1636363636363), (257.27272727272737, 658.290909090909), (265.45454545454555, 654.4181818181818), (273.63636363636374, 650.5454545454545), (281.8181818181819, 646.6727272727272), (290.0000000000001, 642.8), (298.1818181818183, 638.9272727272727), (306.3636363636365, 635.0545454545454), (314.5454545454547, 631.1818181818181), (322.72727272727286, 627.3090909090909), (330.90909090909105, 623.4363636363636), (339.09090909090924, 619.5636363636363), (347.2727272727274, 615.690909090909), (355.4545454545456, 611.8181818181818), (363.6363636363638, 607.9454545454545), (371.818181818182, 604.0727272727272), (380.00000000000017, 600.1999999999999), (388.18181818181836, 596.3272727272727), (396.36363636363654, 592.4545454545454), (404.54545454545473, 588.5818181818181), (412.7272727272729, 584.7090909090908), (420.9090909090911, 580.8363636363636), (429.0909090909093, 576.9636363636363), (437.2727272727275, 573.090909090909), (445.45454545454567, 569.2181818181817), (453.63636363636385, 565.3454545454545), (461.81818181818204, 561.4727272727272), (470.0000000000002, 557.5999999999999), (478.1818181818184, 553.7272727272726), (486.3636363636366, 549.8545454545454), (494.5454545454548, 545.9818181818181), (502.727272727273, 542.1090909090908), (510.90909090909116, 538.2363636363635), (519.0909090909093, 534.3636363636363), (527.2727272727275, 530.490909090909), (535.4545454545456, 526.6181818181817), (543.6363636363637, 522.7454545454544), (551.8181818181819, 518.8727272727272), (560.0, 514.9999999999999), (559.0, 511.2), (558.0, 507.4), (557.0, 503.59999999999997), (556.0, 499.79999999999995), (555.0, 495.99999999999994), (554.0, 492.19999999999993), (553.0, 488.3999999999999), (552.0, 484.5999999999999), (551.0, 480.7999999999999), (550.0, 476.9999999999999), (542.1, 468.925), (534.2, 460.85), (526.3000000000001, 452.77500000000003), (518.4000000000001, 444.70000000000005), (510.5000000000001, 436.62500000000006), (502.60000000000014, 428.55000000000007), (494.70000000000016, 420.4750000000001), (486.8000000000002, 412.4000000000001), (478.9000000000002, 404.3250000000001), (471.0000000000002, 396.2500000000001), (463.10000000000025, 388.1750000000001), (455.2000000000003, 380.10000000000014), (447.3000000000003, 372.02500000000015), (439.4000000000003, 363.95000000000016), (431.50000000000034, 355.87500000000017), (423.60000000000036, 347.8000000000002), (415.7000000000004, 339.7250000000002), (407.8000000000004, 331.6500000000002), (399.90000000000043, 323.5750000000002), (392.00000000000045, 315.5000000000002), (384.1000000000005, 307.42500000000024), (376.2000000000005, 299.35000000000025), (368.3000000000005, 291.27500000000026), (360.40000000000055, 283.2000000000003), (352.50000000000057, 275.1250000000003), (344.6000000000006, 267.0500000000003), (336.7000000000006, 258.9750000000003), (328.80000000000064, 250.90000000000032), (320.90000000000066, 242.82500000000033), (313.0000000000007, 234.75000000000034), (305.1000000000007, 226.67500000000035), (297.2000000000007, 218.60000000000036), (289.30000000000075, 210.52500000000038), (281.4000000000008, 202.4500000000004), (273.5000000000008, 194.3750000000004), (265.6000000000008, 186.3000000000004), (257.70000000000084, 178.22500000000042), (249.80000000000084, 170.15000000000043), (241.90000000000083, 162.07500000000044), (234.00000000000082, 154.00000000000045), (229.94736842105263, 151.05263157894737), (225.89473684210526, 148.10526315789474), (221.8421052631579, 145.1578947368421), (217.78947368421052, 142.21052631578948), (213.73684210526315, 139.26315789473685), (209.68421052631578, 136.31578947368422), (205.6315789473684, 133.3684210526316), (201.57894736842104, 130.42105263157896), (197.52631578947367, 127.47368421052633), (193.4736842105263, 124.5263157894737), (189.42105263157893, 121.57894736842107), (185.36842105263156, 118.63157894736844), (181.3157894736842, 115.68421052631581), (177.26315789473682, 112.73684210526318), (173.21052631578945, 109.78947368421055), (169.15789473684208, 106.84210526315792), (165.1052631578947, 103.89473684210529), (161.05263157894734, 100.94736842105266), (156.99999999999997, 98.00000000000003), (149.2, 94.8), (141.39999999999998, 91.6), (133.59999999999997, 88.39999999999999), (125.79999999999997, 85.19999999999999), (117.99999999999997, 81.99999999999999), (110.19999999999997, 78.79999999999998), (102.39999999999998, 75.59999999999998), (94.59999999999998, 72.39999999999998), (86.79999999999998, 69.19999999999997), (78.99999999999999, 65.99999999999997), (71.19999999999999, 62.79999999999997), (63.39999999999999, 59.599999999999966), (55.599999999999994, 56.39999999999996), (47.8, 53.19999999999996), (40.0, 49.99999999999996), (32.2, 46.799999999999955), (24.400000000000002, 43.59999999999995), (16.6, 40.39999999999995), (8.8, 37.199999999999946), (1.0000000000000009, 33.99999999999994)]
        for d in range(875,1040):
            if (road.main_road5.lane[d].vehicle == 1):
                (x, y) = main_road5[d-875]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road5.lane[d].vehicle == 2):
                (x, y) = main_road5[d-875]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road6_pic8(self):
        main_road6 = [(50, 782), (53.5, 779.5), (57.0, 777.0), (60.5, 774.5), (64.0, 772.0), (67.5, 769.5), (71.0, 767.0), (74.5, 764.5), (78.0, 762.0), (81.5, 759.5), (85.0, 757.0), (88.5, 754.5), (92.0, 752.0), (95.5, 749.5), (99.0, 747.0), (102.5, 744.5), (106.0, 742.0), (109.5, 739.5), (113.0, 737.0), (116.5, 734.5), (120.0, 732.0), (128.07272727272726, 728.2727272727273), (136.14545454545453, 724.5454545454545), (144.2181818181818, 720.8181818181818), (152.29090909090905, 717.090909090909), (160.36363636363632, 713.3636363636363), (168.43636363636358, 709.6363636363635), (176.50909090909084, 705.9090909090908), (184.5818181818181, 702.181818181818), (192.65454545454537, 698.4545454545453), (200.72727272727263, 694.7272727272725), (208.7999999999999, 690.9999999999998), (216.87272727272716, 687.272727272727), (224.94545454545442, 683.5454545454543), (233.0181818181817, 679.8181818181815), (241.09090909090895, 676.0909090909088), (249.16363636363621, 672.363636363636), (257.2363636363635, 668.6363636363633), (265.30909090909074, 664.9090909090905), (273.381818181818, 661.1818181818178), (281.45454545454527, 657.454545454545), (289.52727272727253, 653.7272727272723), (297.5999999999998, 649.9999999999995), (305.67272727272706, 646.2727272727268), (313.7454545454543, 642.545454545454), (321.8181818181816, 638.8181818181813), (329.89090909090885, 635.0909090909086), (337.9636363636361, 631.3636363636358), (346.0363636363634, 627.6363636363631), (354.10909090909064, 623.9090909090903), (362.1818181818179, 620.1818181818176), (370.25454545454517, 616.4545454545448), (378.32727272727243, 612.7272727272721), (386.3999999999997, 608.9999999999993), (394.47272727272696, 605.2727272727266), (402.5454545454542, 601.5454545454538), (410.6181818181815, 597.8181818181811), (418.69090909090875, 594.0909090909083), (426.763636363636, 590.3636363636356), (434.8363636363633, 586.6363636363628), (442.90909090909054, 582.9090909090901), (450.9818181818178, 579.1818181818173), (459.05454545454506, 575.4545454545446), (467.1272727272723, 571.7272727272718), (475.1999999999996, 567.9999999999991), (483.27272727272685, 564.2727272727263), (491.3454545454541, 560.5454545454536), (499.4181818181814, 556.8181818181808), (507.49090909090864, 553.0909090909081), (515.563636363636, 549.3636363636354), (523.6363636363633, 545.6363636363626), (531.7090909090906, 541.9090909090899), (539.7818181818179, 538.1818181818171), (547.8545454545452, 534.4545454545444), (555.9272727272726, 530.7272727272716), (563.9999999999999, 526.9999999999989), (563.3, 521.9), (562.5999999999999, 516.8), (561.8999999999999, 511.69999999999993), (561.1999999999998, 506.5999999999999), (560.4999999999998, 501.4999999999999), (559.7999999999997, 496.39999999999986), (559.0999999999997, 491.29999999999984), (558.3999999999996, 486.1999999999998), (557.6999999999996, 481.0999999999998), (556.9999999999995, 475.9999999999998), (549.1, 467.825), (541.2, 459.65), (533.3000000000001, 451.47499999999997), (525.4000000000001, 443.29999999999995), (517.5000000000001, 435.12499999999994), (509.60000000000014, 426.94999999999993), (501.70000000000016, 418.7749999999999), (493.8000000000002, 410.5999999999999), (485.9000000000002, 402.4249999999999), (478.0000000000002, 394.2499999999999), (470.10000000000025, 386.0749999999999), (462.2000000000003, 377.89999999999986), (454.3000000000003, 369.72499999999985), (446.4000000000003, 361.54999999999984), (438.50000000000034, 353.37499999999983), (430.60000000000036, 345.1999999999998), (422.7000000000004, 337.0249999999998), (414.8000000000004, 328.8499999999998), (406.90000000000043, 320.6749999999998), (399.00000000000045, 312.4999999999998), (391.1000000000005, 304.32499999999976), (383.2000000000005, 296.14999999999975), (375.3000000000005, 287.97499999999974), (367.40000000000055, 279.7999999999997), (359.50000000000057, 271.6249999999997), (351.6000000000006, 263.4499999999997), (343.7000000000006, 255.2749999999997), (335.80000000000064, 247.09999999999968), (327.90000000000066, 238.92499999999967), (320.0000000000007, 230.74999999999966), (312.1000000000007, 222.57499999999965), (304.2000000000007, 214.39999999999964), (296.30000000000075, 206.22499999999962), (288.4000000000008, 198.0499999999996), (280.5000000000008, 189.8749999999996), (272.6000000000008, 181.6999999999996), (264.70000000000084, 173.52499999999958), (256.80000000000086, 165.34999999999957), (248.90000000000086, 157.17499999999956), (241.00000000000085, 148.99999999999955), (236.6315789473684, 145.78947368421052), (232.26315789473682, 142.57894736842104), (227.89473684210523, 139.36842105263156), (223.52631578947364, 136.15789473684208), (219.15789473684205, 132.9473684210526), (214.78947368421046, 129.73684210526312), (210.42105263157887, 126.52631578947364), (206.05263157894728, 123.31578947368416), (201.6842105263157, 120.10526315789468), (197.3157894736841, 116.8947368421052), (192.94736842105252, 113.68421052631572), (188.57894736842093, 110.47368421052624), (184.21052631578934, 107.26315789473676), (179.84210526315775, 104.05263157894728), (175.47368421052616, 100.8421052631578), (171.10526315789457, 97.63157894736833), (166.73684210526298, 94.42105263157885), (162.3684210526314, 91.21052631578937), (157.9999999999998, 87.99999999999989), (150.35, 85.0), (142.7, 82.0), (135.04999999999998, 79.0), (127.39999999999998, 76.0), (119.74999999999997, 73.0), (112.09999999999997, 70.0), (104.44999999999996, 67.0), (96.79999999999995, 64.0), (89.14999999999995, 61.0), (81.49999999999994, 58.0), (73.84999999999994, 55.0), (66.19999999999993, 52.0), (58.54999999999993, 49.0), (50.899999999999935, 46.0), (43.249999999999936, 43.0), (35.59999999999994, 40.0), (27.94999999999994, 37.0), (20.29999999999994, 34.0), (12.64999999999994, 31.0), (4.99999999999994, 28.0)]
        for d in range(875,1040):
            if (road.main_road6.lane[d].vehicle == 1):
                (x, y) = main_road6[d-875]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road6.lane[d].vehicle == 2):
                (x, y) = main_road6[d-875]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()     
    
    def draw_main_road1_pic9(self):
        main_road1 = [(671, 319), (666.2, 320.025), (661.4000000000001, 321.04999999999995), (656.6000000000001, 322.07499999999993), (651.8000000000002, 323.0999999999999), (647.0000000000002, 324.1249999999999), (642.2000000000003, 325.14999999999986), (637.4000000000003, 326.17499999999984), (632.6000000000004, 327.1999999999998), (627.8000000000004, 328.2249999999998), (623.0000000000005, 329.2499999999998), (618.2000000000005, 330.27499999999975), (613.4000000000005, 331.2999999999997), (608.6000000000006, 332.3249999999997), (603.8000000000006, 333.3499999999997), (599.0000000000007, 334.37499999999966), (594.2000000000007, 335.39999999999964), (589.4000000000008, 336.4249999999996), (584.6000000000008, 337.4499999999996), (579.8000000000009, 338.47499999999957), (575.0000000000009, 339.49999999999955), (570.200000000001, 340.5249999999995), (565.400000000001, 341.5499999999995), (560.600000000001, 342.5749999999995), (555.8000000000011, 343.59999999999945), (551.0000000000011, 344.62499999999943), (546.2000000000012, 345.6499999999994), (541.4000000000012, 346.6749999999994), (536.6000000000013, 347.69999999999936), (531.8000000000013, 348.72499999999934), (527.0000000000014, 349.7499999999993), (522.2000000000014, 350.7749999999993), (517.4000000000015, 351.7999999999993), (512.6000000000015, 352.82499999999925), (507.8000000000015, 353.8499999999992), (503.0000000000015, 354.8749999999992), (498.20000000000147, 355.8999999999992), (493.40000000000146, 356.92499999999916), (488.60000000000144, 357.94999999999914), (483.80000000000143, 358.9749999999991), (479.0000000000014, 359.9999999999991), (474.5, 362.7), (470.0, 365.4), (465.5, 368.09999999999997), (461.0, 370.79999999999995), (456.5, 373.49999999999994), (452.0, 376.19999999999993), (447.5, 378.8999999999999), (443.0, 381.5999999999999), (438.5, 384.2999999999999), (434.0, 386.9999999999999), (426.8, 391.0), (419.6, 395.0), (412.40000000000003, 399.0), (405.20000000000005, 403.0), (398.00000000000006, 407.0), (390.80000000000007, 411.0), (383.6000000000001, 415.0), (376.4000000000001, 419.0), (369.2000000000001, 423.0), (362.0000000000001, 427.0), (357.56666666666666, 428.43333333333334), (353.1333333333333, 429.8666666666667), (348.7, 431.3), (344.26666666666665, 432.73333333333335), (339.8333333333333, 434.1666666666667), (335.4, 435.6), (330.96666666666664, 437.03333333333336), (326.5333333333333, 438.4666666666667), (322.09999999999997, 439.90000000000003), (317.66666666666663, 441.33333333333337), (313.2333333333333, 442.7666666666667), (308.79999999999995, 444.20000000000005), (304.3666666666666, 445.6333333333334), (299.9333333333333, 447.0666666666667), (295.49999999999994, 448.50000000000006), (291.0666666666666, 449.9333333333334), (286.63333333333327, 451.36666666666673), (282.19999999999993, 452.80000000000007), (277.7666666666666, 454.2333333333334), (273.33333333333326, 455.66666666666674), (268.8999999999999, 457.1000000000001), (264.4666666666666, 458.5333333333334), (260.03333333333325, 459.96666666666675), (255.5999999999999, 461.4000000000001), (251.16666666666657, 462.8333333333334), (246.73333333333323, 464.26666666666677), (242.2999999999999, 465.7000000000001), (237.86666666666656, 467.13333333333344), (233.43333333333322, 468.5666666666668), (228.9999999999999, 470.0000000000001), (223.5, 472.15), (218.0, 474.29999999999995), (212.5, 476.44999999999993), (207.0, 478.5999999999999), (201.5, 480.7499999999999), (196.0, 482.89999999999986), (190.5, 485.04999999999984), (185.0, 487.1999999999998), (179.5, 489.3499999999998), (174.0, 491.4999999999998), (168.5, 493.64999999999975), (163.0, 495.7999999999997), (157.5, 497.9499999999997), (152.0, 500.0999999999997), (146.5, 502.24999999999966), (141.0, 504.39999999999964), (135.5, 506.5499999999996), (130.0, 508.6999999999996), (124.5, 510.84999999999957), (119.0, 512.9999999999995), (114.25, 516.0416666666666), (109.5, 519.0833333333333), (104.75, 522.1249999999999), (100.0, 525.1666666666665), (95.25, 528.2083333333331), (90.5, 531.2499999999998), (85.75, 534.2916666666664), (81.0, 537.333333333333), (76.25, 540.3749999999997), (71.5, 543.4166666666663), (66.75, 546.4583333333329), (62.0, 549.4999999999995), (57.25, 552.5416666666662), (52.5, 555.5833333333328), (47.75, 558.6249999999994), (43.0, 561.6666666666661), (38.25, 564.7083333333327), (33.5, 567.7499999999993), (28.75, 570.791666666666), (24.0, 573.8333333333326), (19.25, 576.8749999999992), (14.5, 579.9166666666658), (9.75, 582.9583333333325), (5.0, 585.9999999999991)]
        for d in range(880,1014):
            if (road.main_road1.lane[d].vehicle == 1):
                (x, y) = main_road1[d-880]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road1.lane[d].vehicle == 2):
                (x, y) = main_road1[d-880]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road2_pic9(self):
        main_road2 = [(671, 315), (665.575, 316.2), (660.1500000000001, 317.4), (654.7250000000001, 318.59999999999997), (649.3000000000002, 319.79999999999995), (643.8750000000002, 320.99999999999994), (638.4500000000003, 322.19999999999993), (633.0250000000003, 323.3999999999999), (627.6000000000004, 324.5999999999999), (622.1750000000004, 325.7999999999999), (616.7500000000005, 326.9999999999999), (611.3250000000005, 328.1999999999999), (605.9000000000005, 329.39999999999986), (600.4750000000006, 330.59999999999985), (595.0500000000006, 331.79999999999984), (589.6250000000007, 332.99999999999983), (584.2000000000007, 334.1999999999998), (578.7750000000008, 335.3999999999998), (573.3500000000008, 336.5999999999998), (567.9250000000009, 337.7999999999998), (562.5000000000009, 338.9999999999998), (557.075000000001, 340.19999999999976), (551.650000000001, 341.39999999999975), (546.225000000001, 342.59999999999974), (540.8000000000011, 343.7999999999997), (535.3750000000011, 344.9999999999997), (529.9500000000012, 346.1999999999997), (524.5250000000012, 347.3999999999997), (519.1000000000013, 348.5999999999997), (513.6750000000013, 349.79999999999967), (508.2500000000013, 350.99999999999966), (502.8250000000013, 352.19999999999965), (497.4000000000013, 353.39999999999964), (491.9750000000013, 354.5999999999996), (486.55000000000126, 355.7999999999996), (481.12500000000125, 356.9999999999996), (475.70000000000124, 358.1999999999996), (470.2750000000012, 359.3999999999996), (464.8500000000012, 360.59999999999957), (459.4250000000012, 361.79999999999956), (454.0000000000012, 362.99999999999955), (450.5, 365.4), (447.0, 367.79999999999995), (443.5, 370.19999999999993), (440.0, 372.5999999999999), (436.5, 374.9999999999999), (433.0, 377.39999999999986), (429.5, 379.79999999999984), (426.0, 382.1999999999998), (422.5, 384.5999999999998), (419.0, 386.9999999999998), (414.7, 389.9), (410.4, 392.79999999999995), (406.09999999999997, 395.69999999999993), (401.79999999999995, 398.5999999999999), (397.49999999999994, 401.4999999999999), (393.19999999999993, 404.39999999999986), (388.8999999999999, 407.29999999999984), (384.5999999999999, 410.1999999999998), (380.2999999999999, 413.0999999999998), (375.9999999999999, 415.9999999999998), (372.23333333333335, 417.3), (368.4666666666667, 418.6), (364.70000000000005, 419.90000000000003), (360.9333333333334, 421.20000000000005), (357.16666666666674, 422.50000000000006), (353.4000000000001, 423.80000000000007), (349.63333333333344, 425.1000000000001), (345.8666666666668, 426.4000000000001), (342.10000000000014, 427.7000000000001), (338.3333333333335, 429.0000000000001), (334.56666666666683, 430.3000000000001), (330.8000000000002, 431.60000000000014), (327.03333333333353, 432.90000000000015), (323.2666666666669, 434.20000000000016), (319.5000000000002, 435.50000000000017), (315.7333333333336, 436.8000000000002), (311.9666666666669, 438.1000000000002), (308.2000000000003, 439.4000000000002), (304.4333333333336, 440.7000000000002), (300.66666666666697, 442.0000000000002), (296.9000000000003, 443.30000000000024), (293.13333333333367, 444.60000000000025), (289.366666666667, 445.90000000000026), (285.60000000000036, 447.2000000000003), (281.8333333333337, 448.5000000000003), (278.06666666666706, 449.8000000000003), (274.3000000000004, 451.1000000000003), (270.53333333333376, 452.4000000000003), (266.7666666666671, 453.70000000000033), (263.00000000000045, 455.00000000000034), (258.2, 456.45), (253.39999999999998, 457.9), (248.59999999999997, 459.34999999999997), (243.79999999999995, 460.79999999999995), (238.99999999999994, 462.24999999999994), (234.19999999999993, 463.69999999999993), (229.39999999999992, 465.1499999999999), (224.5999999999999, 466.5999999999999), (219.7999999999999, 468.0499999999999), (214.9999999999999, 469.4999999999999), (210.19999999999987, 470.9499999999999), (205.39999999999986, 472.39999999999986), (200.59999999999985, 473.84999999999985), (195.79999999999984, 475.29999999999984), (190.99999999999983, 476.74999999999983), (186.19999999999982, 478.1999999999998), (181.3999999999998, 479.6499999999998), (176.5999999999998, 481.0999999999998), (171.79999999999978, 482.5499999999998), (166.99999999999977, 483.9999999999998), (160.16666666666666, 487.9166666666667), (153.33333333333331, 491.83333333333337), (146.49999999999997, 495.75000000000006), (139.66666666666663, 499.66666666666674), (132.8333333333333, 503.5833333333334), (125.99999999999996, 507.5000000000001), (119.16666666666663, 511.4166666666668), (112.3333333333333, 515.3333333333335), (105.49999999999997, 519.2500000000001), (98.66666666666664, 523.1666666666667), (91.83333333333331, 527.0833333333334), (84.99999999999999, 531.0), (78.16666666666666, 534.9166666666666), (71.33333333333333, 538.8333333333333), (64.5, 542.7499999999999), (57.666666666666664, 546.6666666666665), (50.83333333333333, 550.5833333333331), (43.99999999999999, 554.4999999999998), (37.16666666666666, 558.4166666666664), (30.333333333333325, 562.333333333333), (23.499999999999993, 566.2499999999997), (16.66666666666666, 570.1666666666663), (9.833333333333329, 574.0833333333329), (2.9999999999999956, 577.9999999999995)]
        for d in range(880,1014):
            if (road.main_road2.lane[d].vehicle == 1):
                (x, y) = main_road2[d-880]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road2.lane[d].vehicle == 2):
                (x, y) = main_road2[d-880]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road3_pic9(self):
        main_road3 = [(670, 307), (664.475, 308.225), (658.95, 309.45000000000005), (653.4250000000001, 310.67500000000007), (647.9000000000001, 311.9000000000001), (642.3750000000001, 313.1250000000001), (636.8500000000001, 314.35000000000014), (631.3250000000002, 315.57500000000016), (625.8000000000002, 316.8000000000002), (620.2750000000002, 318.0250000000002), (614.7500000000002, 319.2500000000002), (609.2250000000003, 320.47500000000025), (603.7000000000003, 321.7000000000003), (598.1750000000003, 322.9250000000003), (592.6500000000003, 324.1500000000003), (587.1250000000003, 325.37500000000034), (581.6000000000004, 326.60000000000036), (576.0750000000004, 327.8250000000004), (570.5500000000004, 329.0500000000004), (565.0250000000004, 330.27500000000043), (559.5000000000005, 331.50000000000045), (553.9750000000005, 332.7250000000005), (548.4500000000005, 333.9500000000005), (542.9250000000005, 335.1750000000005), (537.4000000000005, 336.40000000000055), (531.8750000000006, 337.62500000000057), (526.3500000000006, 338.8500000000006), (520.8250000000006, 340.0750000000006), (515.3000000000006, 341.30000000000064), (509.77500000000066, 342.52500000000066), (504.2500000000007, 343.7500000000007), (498.7250000000007, 344.9750000000007), (493.2000000000007, 346.2000000000007), (487.67500000000075, 347.42500000000075), (482.1500000000008, 348.6500000000008), (476.6250000000008, 349.8750000000008), (471.1000000000008, 351.1000000000008), (465.57500000000084, 352.32500000000084), (460.05000000000086, 353.55000000000086), (454.5250000000009, 354.7750000000009), (449.0000000000009, 356.0000000000009), (444.1, 359.0), (439.20000000000005, 362.0), (434.30000000000007, 365.0), (429.4000000000001, 368.0), (424.5000000000001, 371.0), (419.60000000000014, 374.0), (414.70000000000016, 377.0), (409.8000000000002, 380.0), (404.9000000000002, 383.0), (400.0000000000002, 386.0), (394.9, 389.2), (389.79999999999995, 392.4), (384.69999999999993, 395.59999999999997), (379.5999999999999, 398.79999999999995), (374.4999999999999, 401.99999999999994), (369.39999999999986, 405.19999999999993), (364.29999999999984, 408.3999999999999), (359.1999999999998, 411.5999999999999), (354.0999999999998, 414.7999999999999), (348.9999999999998, 417.9999999999999), (346.43333333333334, 419.1), (343.8666666666667, 420.20000000000005), (341.3, 421.30000000000007), (338.73333333333335, 422.4000000000001), (336.1666666666667, 423.5000000000001), (333.6, 424.60000000000014), (331.03333333333336, 425.70000000000016), (328.4666666666667, 426.8000000000002), (325.90000000000003, 427.9000000000002), (323.33333333333337, 429.0000000000002), (320.7666666666667, 430.10000000000025), (318.20000000000005, 431.2000000000003), (315.6333333333334, 432.3000000000003), (313.0666666666667, 433.4000000000003), (310.50000000000006, 434.50000000000034), (307.9333333333334, 435.60000000000036), (305.36666666666673, 436.7000000000004), (302.80000000000007, 437.8000000000004), (300.2333333333334, 438.90000000000043), (297.66666666666674, 440.00000000000045), (295.1000000000001, 441.1000000000005), (292.5333333333334, 442.2000000000005), (289.96666666666675, 443.3000000000005), (287.4000000000001, 444.40000000000055), (284.8333333333334, 445.50000000000057), (282.26666666666677, 446.6000000000006), (279.7000000000001, 447.7000000000006), (277.13333333333344, 448.80000000000064), (274.5666666666668, 449.90000000000066), (272.0000000000001, 451.0000000000007), (266.3, 452.65), (260.6, 454.29999999999995), (254.90000000000003, 455.94999999999993), (249.20000000000005, 457.5999999999999), (243.50000000000006, 459.2499999999999), (237.80000000000007, 460.89999999999986), (232.10000000000008, 462.54999999999984), (226.4000000000001, 464.1999999999998), (220.7000000000001, 465.8499999999998), (215.0000000000001, 467.4999999999998), (209.30000000000013, 469.14999999999975), (203.60000000000014, 470.7999999999997), (197.90000000000015, 472.4499999999997), (192.20000000000016, 474.0999999999997), (186.50000000000017, 475.74999999999966), (180.80000000000018, 477.39999999999964), (175.1000000000002, 479.0499999999996), (169.4000000000002, 480.6999999999996), (163.70000000000022, 482.34999999999957), (158.00000000000023, 483.99999999999955), (151.58333333333334, 487.5), (145.16666666666669, 491.0), (138.75000000000003, 494.5), (132.33333333333337, 498.0), (125.9166666666667, 501.5), (119.50000000000003, 505.0), (113.08333333333336, 508.5), (106.66666666666669, 512.0), (100.25000000000001, 515.5), (93.83333333333334, 519.0), (87.41666666666667, 522.5), (81.0, 526.0), (74.58333333333333, 529.5), (68.16666666666666, 533.0), (61.74999999999999, 536.5), (55.33333333333333, 540.0), (48.916666666666664, 543.5), (42.5, 547.0), (36.083333333333336, 550.5), (29.666666666666668, 554.0), (23.25, 557.5), (16.833333333333332, 561.0), (10.416666666666664, 564.5), (3.9999999999999973, 568.0)]
        for d in range(880,1014):
            if (road.main_road3.lane[d].vehicle == 1):
                (x, y) = main_road3[d-880]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road3.lane[d].vehicle == 2):
                (x, y) = main_road3[d-880]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
 

               
    def draw_main_road4_pic9(self):
        main_road4 = [(1, 609), (5.0, 606.0), (9.0, 603.0), (13.0, 600.0), (17.0, 597.0), (21.0, 594.0), (25.0, 591.0), (29.0, 588.0), (33.0, 585.0), (37.0, 582.0), (41.0, 579.0), (45.0, 576.0), (49.0, 573.0), (53.0, 570.0), (57.0, 567.0), (61.0, 564.0), (65.0, 561.0), (69.0, 558.0), (73.0, 555.0), (77.0, 552.0), (81.0, 549.0), (85.0, 546.0), (89.0, 543.0), (93.0, 540.0), (97.0, 537.0), (101.75, 535.0), (106.5, 533.0), (111.25, 531.0), (116.0, 529.0), (120.75, 527.0), (125.5, 525.0), (130.25, 523.0), (135.0, 521.0), (139.75, 519.0), (144.5, 517.0), (149.25, 515.0), (154.0, 513.0), (158.75, 511.0), (163.5, 509.0), (168.25, 507.0), (173.0, 505.0), (177.75, 503.0), (182.5, 501.0), (187.25, 499.0), (192.0, 497.0), (196.53333333333333, 495.6), (201.06666666666666, 494.20000000000005), (205.6, 492.80000000000007), (210.13333333333333, 491.4000000000001), (214.66666666666666, 490.0000000000001), (219.2, 488.60000000000014), (223.73333333333332, 487.20000000000016), (228.26666666666665, 485.8000000000002), (232.79999999999998, 484.4000000000002), (237.33333333333331, 483.0000000000002), (241.86666666666665, 481.60000000000025), (246.39999999999998, 480.2000000000003), (250.9333333333333, 478.8000000000003), (255.46666666666664, 477.4000000000003), (260.0, 476.00000000000034), (264.53333333333336, 474.60000000000036), (269.0666666666667, 473.2000000000004), (273.6000000000001, 471.8000000000004), (278.13333333333344, 470.40000000000043), (282.6666666666668, 469.00000000000045), (287.20000000000016, 467.6000000000005), (291.7333333333335, 466.2000000000005), (296.2666666666669, 464.8000000000005), (300.80000000000024, 463.40000000000055), (305.3333333333336, 462.00000000000057), (309.86666666666696, 460.6000000000006), (314.4000000000003, 459.2000000000006), (318.9333333333337, 457.80000000000064), (323.46666666666704, 456.40000000000066), (328.0000000000004, 455.0000000000007), (341.3, 452.2), (354.6, 449.4), (367.90000000000003, 446.59999999999997), (381.20000000000005, 443.79999999999995), (394.50000000000006, 440.99999999999994), (407.80000000000007, 438.19999999999993), (421.1000000000001, 435.3999999999999), (434.4000000000001, 432.5999999999999), (447.7000000000001, 429.7999999999999), (461.0000000000001, 426.9999999999999), (468.1, 426.0), (475.20000000000005, 425.0), (482.30000000000007, 424.0), (489.4000000000001, 423.0), (496.5000000000001, 422.0), (503.60000000000014, 421.0), (510.70000000000016, 420.0), (517.8000000000002, 419.0), (524.9000000000002, 418.0), (532.0000000000002, 417.0), (535.8611111111111, 416.0), (539.7222222222222, 415.0), (543.5833333333333, 414.0), (547.4444444444443, 413.0), (551.3055555555554, 412.0), (555.1666666666665, 411.0), (559.0277777777776, 410.0), (562.8888888888887, 409.0), (566.7499999999998, 408.0), (570.6111111111109, 407.0), (574.472222222222, 406.0), (578.333333333333, 405.0), (582.1944444444441, 404.0), (586.0555555555552, 403.0), (589.9166666666663, 402.0), (593.7777777777774, 401.0), (597.6388888888885, 400.0), (601.4999999999995, 399.0), (605.3611111111106, 398.0), (609.2222222222217, 397.0), (613.0833333333328, 396.0), (616.9444444444439, 395.0), (620.805555555555, 394.0), (624.6666666666661, 393.0), (628.5277777777771, 392.0), (632.3888888888882, 391.0), (636.2499999999993, 390.0), (640.1111111111104, 389.0), (643.9722222222215, 388.0), (647.8333333333326, 387.0), (651.6944444444437, 386.0), (655.5555555555547, 385.0), (659.4166666666658, 384.0), (663.2777777777769, 383.0), (667.138888888888, 382.0), (670.9999999999991, 381.0)]
        for d in range(735,865):
            if (road.main_road4.lane[d].vehicle == 1):
                (x, y) = main_road4[d-735]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road4.lane[d].vehicle == 2):
                (x, y) = main_road4[d-735]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road5_pic9(self):
        main_road5 = [(1, 602), (4.833333333333334, 599.2916666666666), (8.666666666666668, 596.5833333333333), (12.500000000000002, 593.8749999999999), (16.333333333333336, 591.1666666666665), (20.166666666666668, 588.4583333333331), (24.0, 585.7499999999998), (27.833333333333332, 583.0416666666664), (31.666666666666664, 580.333333333333), (35.5, 577.6249999999997), (39.333333333333336, 574.9166666666663), (43.16666666666667, 572.2083333333329), (47.00000000000001, 569.4999999999995), (50.83333333333334, 566.7916666666662), (54.66666666666668, 564.0833333333328), (58.500000000000014, 561.3749999999994), (62.33333333333335, 558.6666666666661), (66.16666666666669, 555.9583333333327), (70.00000000000001, 553.2499999999993), (73.83333333333334, 550.541666666666), (77.66666666666667, 547.8333333333326), (81.5, 545.1249999999992), (85.33333333333333, 542.4166666666658), (89.16666666666666, 539.7083333333325), (92.99999999999999, 536.9999999999991), (98.0, 534.8), (103.0, 532.5999999999999), (108.0, 530.3999999999999), (113.0, 528.1999999999998), (118.0, 525.9999999999998), (123.0, 523.7999999999997), (128.0, 521.5999999999997), (133.0, 519.3999999999996), (138.0, 517.1999999999996), (143.0, 514.9999999999995), (148.0, 512.7999999999995), (153.0, 510.5999999999995), (158.0, 508.3999999999995), (163.0, 506.19999999999953), (168.0, 503.99999999999955), (173.0, 501.79999999999956), (178.0, 499.59999999999957), (183.0, 497.3999999999996), (188.0, 495.1999999999996), (193.0, 492.9999999999996), (198.06666666666666, 491.4), (203.13333333333333, 489.79999999999995), (208.2, 488.19999999999993), (213.26666666666665, 486.5999999999999), (218.33333333333331, 484.9999999999999), (223.39999999999998, 483.39999999999986), (228.46666666666664, 481.79999999999984), (233.5333333333333, 480.1999999999998), (238.59999999999997, 478.5999999999998), (243.66666666666663, 476.9999999999998), (248.7333333333333, 475.39999999999975), (253.79999999999995, 473.7999999999997), (258.8666666666666, 472.1999999999997), (263.9333333333333, 470.5999999999997), (268.99999999999994, 468.99999999999966), (274.0666666666666, 467.39999999999964), (279.13333333333327, 465.7999999999996), (284.19999999999993, 464.1999999999996), (289.2666666666666, 462.59999999999957), (294.33333333333326, 460.99999999999955), (299.3999999999999, 459.3999999999995), (304.4666666666666, 457.7999999999995), (309.53333333333325, 456.1999999999995), (314.5999999999999, 454.59999999999945), (319.6666666666666, 452.99999999999943), (324.73333333333323, 451.3999999999994), (329.7999999999999, 449.7999999999994), (334.86666666666656, 448.19999999999936), (339.9333333333332, 446.59999999999934), (344.9999999999999, 444.9999999999993), (354.2, 443.4), (363.4, 441.79999999999995), (372.59999999999997, 440.19999999999993), (381.79999999999995, 438.5999999999999), (390.99999999999994, 436.9999999999999), (400.19999999999993, 435.39999999999986), (409.3999999999999, 433.79999999999984), (418.5999999999999, 432.1999999999998), (427.7999999999999, 430.5999999999998), (436.9999999999999, 428.9999999999998), (445.1, 427.6), (453.20000000000005, 426.20000000000005), (461.30000000000007, 424.80000000000007), (469.4000000000001, 423.4000000000001), (477.5000000000001, 422.0000000000001), (485.60000000000014, 420.60000000000014), (493.70000000000016, 419.20000000000016), (501.8000000000002, 417.8000000000002), (509.9000000000002, 416.4000000000002), (518.0000000000002, 415.0000000000002), (522.3055555555555, 413.94444444444446), (526.6111111111111, 412.8888888888889), (530.9166666666666, 411.83333333333337), (535.2222222222222, 410.7777777777778), (539.5277777777777, 409.7222222222223), (543.8333333333333, 408.66666666666674), (548.1388888888888, 407.6111111111112), (552.4444444444443, 406.55555555555566), (556.7499999999999, 405.5000000000001), (561.0555555555554, 404.44444444444457), (565.361111111111, 403.388888888889), (569.6666666666665, 402.3333333333335), (573.9722222222221, 401.27777777777794), (578.2777777777776, 400.2222222222224), (582.5833333333331, 399.16666666666686), (586.8888888888887, 398.1111111111113), (591.1944444444442, 397.05555555555577), (595.4999999999998, 396.0000000000002), (599.8055555555553, 394.9444444444447), (604.1111111111109, 393.88888888888914), (608.4166666666664, 392.8333333333336), (612.722222222222, 391.77777777777806), (617.0277777777775, 390.7222222222225), (621.333333333333, 389.66666666666697), (625.6388888888886, 388.6111111111114), (629.9444444444441, 387.5555555555559), (634.2499999999997, 386.50000000000034), (638.5555555555552, 385.4444444444448), (642.8611111111107, 384.38888888888926), (647.1666666666663, 383.3333333333337), (651.4722222222218, 382.27777777777817), (655.7777777777774, 381.2222222222226), (660.0833333333329, 380.1666666666671), (664.3888888888885, 379.11111111111154), (668.694444444444, 378.055555555556), (672.9999999999995, 377.00000000000045)]
        for d in range(735,865):
            if (road.main_road5.lane[d].vehicle == 1):
                (x, y) = main_road5[d-735]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road5.lane[d].vehicle == 2):
                (x, y) = main_road5[d-735]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
    def draw_main_road6_pic9(self):
        main_road6 = [(0, 591), (4.541666666666667, 588.2083333333334), (9.083333333333334, 585.4166666666667), (13.625, 582.6250000000001), (18.166666666666668, 579.8333333333335), (22.708333333333336, 577.0416666666669), (27.250000000000004, 574.2500000000002), (31.79166666666667, 571.4583333333336), (36.333333333333336, 568.666666666667), (40.875, 565.8750000000003), (45.416666666666664, 563.0833333333337), (49.95833333333333, 560.2916666666671), (54.49999999999999, 557.5000000000005), (59.04166666666666, 554.7083333333338), (63.58333333333332, 551.9166666666672), (68.12499999999999, 549.1250000000006), (72.66666666666666, 546.3333333333339), (77.20833333333333, 543.5416666666673), (81.75, 540.7500000000007), (86.29166666666667, 537.958333333334), (90.83333333333334, 535.1666666666674), (95.37500000000001, 532.3750000000008), (99.91666666666669, 529.5833333333342), (104.45833333333336, 526.7916666666675), (109.00000000000003, 524.0000000000009), (114.45, 521.9), (119.9, 519.8), (125.35000000000001, 517.6999999999999), (130.8, 515.5999999999999), (136.25, 513.4999999999999), (141.7, 511.39999999999986), (147.14999999999998, 509.29999999999984), (152.59999999999997, 507.1999999999998), (158.04999999999995, 505.0999999999998), (163.49999999999994, 502.9999999999998), (168.94999999999993, 500.89999999999975), (174.39999999999992, 498.7999999999997), (179.8499999999999, 496.6999999999997), (185.2999999999999, 494.5999999999997), (190.7499999999999, 492.49999999999966), (196.19999999999987, 490.39999999999964), (201.64999999999986, 488.2999999999996), (207.09999999999985, 486.1999999999996), (212.54999999999984, 484.09999999999957), (217.99999999999983, 481.99999999999955), (223.03333333333333, 480.43333333333334), (228.06666666666666, 478.8666666666667), (233.1, 477.3), (238.13333333333333, 475.73333333333335), (243.16666666666666, 474.1666666666667), (248.2, 472.6), (253.23333333333332, 471.03333333333336), (258.26666666666665, 469.4666666666667), (263.3, 467.90000000000003), (268.33333333333337, 466.33333333333337), (273.36666666666673, 464.7666666666667), (278.4000000000001, 463.20000000000005), (283.43333333333345, 461.6333333333334), (288.4666666666668, 460.0666666666667), (293.50000000000017, 458.50000000000006), (298.53333333333353, 456.9333333333334), (303.5666666666669, 455.36666666666673), (308.60000000000025, 453.80000000000007), (313.6333333333336, 452.2333333333334), (318.66666666666697, 450.66666666666674), (323.70000000000033, 449.1000000000001), (328.7333333333337, 447.5333333333334), (333.76666666666705, 445.96666666666675), (338.8000000000004, 444.4000000000001), (343.83333333333377, 442.8333333333334), (348.86666666666713, 441.26666666666677), (353.9000000000005, 439.7000000000001), (358.93333333333385, 438.13333333333344), (363.9666666666672, 436.5666666666668), (369.00000000000057, 435.0000000000001), (378.1, 433.2), (387.20000000000005, 431.4), (396.30000000000007, 429.59999999999997), (405.4000000000001, 427.79999999999995), (414.5000000000001, 425.99999999999994), (423.60000000000014, 424.19999999999993), (432.70000000000016, 422.3999999999999), (441.8000000000002, 420.5999999999999), (450.9000000000002, 418.7999999999999), (460.0000000000002, 416.9999999999999), (467.0, 415.8), (474.0, 414.6), (481.0, 413.40000000000003), (488.0, 412.20000000000005), (495.0, 411.00000000000006), (502.0, 409.80000000000007), (509.0, 408.6000000000001), (516.0, 407.4000000000001), (523.0, 406.2000000000001), (530.0, 405.0000000000001), (533.9444444444445, 403.97222222222223), (537.8888888888889, 402.94444444444446), (541.8333333333334, 401.9166666666667), (545.7777777777778, 400.8888888888889), (549.7222222222223, 399.86111111111114), (553.6666666666667, 398.83333333333337), (557.6111111111112, 397.8055555555556), (561.5555555555557, 396.7777777777778), (565.5000000000001, 395.75000000000006), (569.4444444444446, 394.7222222222223), (573.388888888889, 393.6944444444445), (577.3333333333335, 392.66666666666674), (581.2777777777779, 391.63888888888897), (585.2222222222224, 390.6111111111112), (589.1666666666669, 389.5833333333334), (593.1111111111113, 388.55555555555566), (597.0555555555558, 387.5277777777779), (601.0000000000002, 386.5000000000001), (604.9444444444447, 385.47222222222234), (608.8888888888891, 384.44444444444457), (612.8333333333336, 383.4166666666668), (616.777777777778, 382.388888888889), (620.7222222222225, 381.36111111111126), (624.666666666667, 380.3333333333335), (628.6111111111114, 379.3055555555557), (632.5555555555559, 378.27777777777794), (636.5000000000003, 377.25000000000017), (640.4444444444448, 376.2222222222224), (644.3888888888893, 375.1944444444446), (648.3333333333337, 374.16666666666686), (652.2777777777782, 373.1388888888891), (656.2222222222226, 372.1111111111113), (660.1666666666671, 371.08333333333354), (664.1111111111115, 370.05555555555577), (668.055555555556, 369.027777777778), (672.0000000000005, 368.0000000000002)]
        for d in range(735,865):
            if (road.main_road6.lane[d].vehicle == 1):
                (x, y) = main_road6[d-735]
                pygame.draw.rect(self.screen, (0, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()
                
            elif (road.main_road6.lane[d].vehicle == 2):
                (x, y) = main_road6[d-735]
                pygame.draw.rect(self.screen, (255, 0, 0), pygame.Rect(x, y, 2, 2))
                pygame.display.update()          
                
                
